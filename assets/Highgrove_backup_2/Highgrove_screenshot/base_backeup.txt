 else if (productValues.Category == '2') {
        console.log("it's Base")
        if (productValues.Springs.length == 0) {
          console.log('spring value is empty.........')
          setisValid({ Springs: true })
        } else if (productValues.BaseSizes.length == 0) {
          console.log('Base size is empty.........')
          setisValid({ BaseSize: true })
        } else if (productValues.BaseFabricColour.length == 0) {
          console.log('Base Fabric Colour value is empty.........')
          setisValid({ BaseColour: true })
        } else if (productValues.FeetOption.length == 0) {
          console.log('Feet value is empty.........')
          setisValid({ Feet: true })
        } else if (productValues.FootBoard.length == 0) {
          console.log('Footboard value is empty.........')
          setisValid({ FootBoard: true })
        } else if (productValues.Drawers.length == 0) {
          console.log('Drawer value is empty.........')
          setisValid({ Drawer: true })
        } else {
          console.log('Base Submitted')

          const createVariations = () => {
            const variations = []
            for (const BaseSizes of productValues.BaseSizes) {
              for (const spring of productValues.Springs) {
                for (const baseFabricColour of productValues.BaseFabricColour) {
                  for (const feetOption of productValues.FeetOption) {
                    for (const footBoard of productValues.FootBoard) {
                      for (const drawers of productValues.Drawers) {
                        const variation = {
                          SpringGroup: spring,
                          BaseSizesGroup: BaseSizes,
                          BaseFabricColourGroup: baseFabricColour,
                          FeetOptionGroup: feetOption,
                          FootBoardGroup: footBoard,
                          DrawersGroup: drawers,
                        }
                        variations.push(variation)
                      }
                    }
                  }
                }
              }
            }
            return variations
          }
          // Example usage
          const variations = createVariations()

          // Print variations with desired format
          variations.forEach((variation) => {
            const variationString = `Name: ${productValues.Name} - BaseSize: ${variation.BaseSizesGroup} - Base Fabric Colour: ${variation.BaseFabricColourGroup} - Feet Option: ${variation.FeetOptionGroup} - Foot Board: ${variation.FootBoardGroup} - Drawers: ${variation.DrawersGroup}`
            console.log(variationString)
          })
          //API call function
          const productAPIData = {
            product: productValues,
            product_group: variations,
          }
          submitdata(productAPIData)
        }
      }