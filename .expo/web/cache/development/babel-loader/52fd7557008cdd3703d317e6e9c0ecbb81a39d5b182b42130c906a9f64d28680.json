{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _cancelAllScheduledNotificationsAsync;\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function cancelAllScheduledNotificationsAsync() {\n  return (_cancelAllScheduledNotificationsAsync = _cancelAllScheduledNotificationsAsync || _asyncToGenerator(function* () {\n    if (!NotificationScheduler.cancelAllScheduledNotificationsAsync) {\n      throw new UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n    }\n    return yield NotificationScheduler.cancelAllScheduledNotificationsAsync();\n  })).apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationScheduler","cancelAllScheduledNotificationsAsync","_cancelAllScheduledNotificationsAsync","_asyncToGenerator","apply","arguments"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/node_modules/expo-notifications/src/cancelAllScheduledNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\n/**\n * Cancels all scheduled notifications.\n * @return A Promise that resolves once all the scheduled notifications are successfully canceled, or if there are no scheduled notifications.\n * @header schedule\n */\nexport default async function cancelAllScheduledNotificationsAsync(): Promise<void> {\n  if (!NotificationScheduler.cancelAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n  }\n\n  return await NotificationScheduler.cancelAllScheduledNotificationsAsync();\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB;AAO5B,wBAA8BC,oCAAoCA,CAAA;EAAA,QAAAC,qCAAA,GAAAA,qCAAA,IAAAC,iBAAA,CAAnD,aAAmD;IAChE,IAAI,CAACH,qBAAqB,CAACC,oCAAoC,EAAE;MAC/D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,sCAAsC,CAAC;;IAGxF,aAAaC,qBAAqB,CAACC,oCAAoC,EAAE;EAC3E,CAAC,GAAAG,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}