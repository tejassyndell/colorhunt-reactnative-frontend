{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _dismissAllNotificationsAsync;\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationPresenter from \"./NotificationPresenterModule\";\nexport default function dismissAllNotificationsAsync() {\n  return (_dismissAllNotificationsAsync = _dismissAllNotificationsAsync || _asyncToGenerator(function* () {\n    if (!NotificationPresenter.dismissAllNotificationsAsync) {\n      throw new UnavailabilityError('Notifications', 'dismissAllNotificationsAsync');\n    }\n    return yield NotificationPresenter.dismissAllNotificationsAsync();\n  })).apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationPresenter","dismissAllNotificationsAsync","_dismissAllNotificationsAsync","_asyncToGenerator","apply","arguments"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/node_modules/expo-notifications/src/dismissAllNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\n\n/**\n * Removes all application's notifications displayed in the notification tray (Notification Center).\n * @return A Promise which resolves once the request to dismiss the notifications is successfully dispatched to the notifications manager.\n * @header dismiss\n */\nexport default async function dismissAllNotificationsAsync(): Promise<void> {\n  if (!NotificationPresenter.dismissAllNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'dismissAllNotificationsAsync');\n  }\n\n  return await NotificationPresenter.dismissAllNotificationsAsync();\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB;AAO5B,wBAA8BC,4BAA4BA,CAAA;EAAA,QAAAC,6BAAA,GAAAA,6BAAA,IAAAC,iBAAA,CAA3C,aAA2C;IACxD,IAAI,CAACH,qBAAqB,CAACC,4BAA4B,EAAE;MACvD,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,8BAA8B,CAAC;;IAGhF,aAAaC,qBAAqB,CAACC,4BAA4B,EAAE;EACnE,CAAC,GAAAG,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}