{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\nimport { getProductName } from \"../../api/api\";\nimport ButtomNavigation from \"../../components/AppFooter/ButtomNavigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AllArticle(props) {\n  var navigation = props.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    nameDatas = _useState2[0],\n    setNameDatas = _useState2[1];\n  var baseImageUrl = 'https://colorhunt.in/colorHuntApi/public/uploads/';\n  var getCategoriesname = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var res = yield getProductName();\n      if (res.status === 200) {\n        setNameDatas(res.data);\n      }\n    });\n    return function getCategoriesname() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getCategoriesname();\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(View, {});\n      }\n    });\n  }, []);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: {\n        alignItems: 'center',\n        height: 370,\n        width: 200,\n        marginLeft: 5,\n        marginRight: 5,\n        marginBottom: 20,\n        borderRadius: 10,\n        borderColor: 'gray',\n        backgroundColor: 'white',\n        shadowColor: 'rgba(0, 0, 0, 0.2)',\n        shadowOpacity: 0.8,\n        shadowRadius: 4,\n        shadowOffset: {\n          width: 0,\n          height: 2\n        },\n        elevation: 4\n      },\n      children: [_jsx(Image, {\n        source: {\n          uri: baseImageUrl + item.Photos\n        },\n        style: {\n          width: 200,\n          height: 300,\n          borderRadius: 10\n        }\n      }), _jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: item.ArticleNumber\n      }), _jsx(Text, {\n        children: item.Category\n      }), _jsx(Text, {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"₹\" + item.ArticleRate\n      })]\n    }, item.id);\n  };\n  return _jsx(View, {\n    style: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: '#FFFF'\n    },\n    children: _jsx(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      style: {\n        overflow: 'hidden'\n      },\n      children: _jsx(View, {\n        style: {\n          position: 'relative',\n          maxWidth: '100%',\n          height: 'auto',\n          top: 20\n        },\n        children: _jsx(FlatList, {\n          data: nameDatas,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: renderItem,\n          numColumns: 3,\n          showsHorizontalScrollIndicator: false,\n          contentContainerStyle: {\n            paddingVertical: 10\n          }\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useLayoutEffect","useState","Text","View","Image","ScrollView","FlatList","MenuImage","getProductName","ButtomNavigation","jsx","_jsx","jsxs","_jsxs","AllArticle","props","navigation","_useState","_useState2","_slicedToArray","nameDatas","setNameDatas","baseImageUrl","getCategoriesname","_ref","_asyncToGenerator","res","status","data","apply","arguments","setOptions","headerRight","renderItem","_ref2","item","style","alignItems","height","width","marginLeft","marginRight","marginBottom","borderRadius","borderColor","backgroundColor","shadowColor","shadowOpacity","shadowRadius","shadowOffset","elevation","children","source","uri","Photos","fontWeight","ArticleNumber","Category","ArticleRate","id","showsHorizontalScrollIndicator","overflow","position","maxWidth","top","keyExtractor","numColumns","contentContainerStyle","paddingVertical"],"sources":["D:/Rohit Project task/colorhunt-reactnative-frontend/src/screens/AllArticle/AllArticle.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { Text, View, Image, ScrollView, FlatList } from \"react-native\";\r\nimport MenuImage from \"../../components/MenuImage/MenuImage\";\r\nimport { getProductName } from \"../../api/api\";\r\nimport ButtomNavigation from '../../components/AppFooter/ButtomNavigation'\r\n\r\nexport default function AllArticle(props) {\r\n  const { navigation } = props;\r\n\r\n  const [nameDatas, setNameDatas] = useState([]);\r\n\r\n  // uploard url image\r\n  const baseImageUrl = 'https://colorhunt.in/colorHuntApi/public/uploads/';\r\n\r\n  // getCategoriesname\r\n  const getCategoriesname = async () => {\r\n    const res = await getProductName();\r\n    if (res.status === 200) {\r\n      setNameDatas(res.data);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCategoriesname();\r\n  }, []);\r\n\r\n  \r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      // headerright: () => (\r\n       \r\n      // ),\r\n      headerRight: () => <View />,\r\n    });\r\n  }, []);\r\n\r\n  const renderItem = ({ item }) => (\r\n    <View key={item.id} style={{\r\n      alignItems: 'center',\r\n      height: 370,\r\n      width: 200,\r\n      marginLeft: 5,\r\n      marginRight: 5,\r\n      marginBottom: 20,\r\n      borderRadius: 10,\r\n      borderColor: 'gray',\r\n      backgroundColor: 'white',\r\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\r\n      shadowOpacity: 0.8,\r\n      shadowRadius: 4,\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2,\r\n      },\r\n      elevation: 4,\r\n    }}>\r\n      <Image source={{ uri: baseImageUrl + item.Photos }} style={{ width: 200, height: 300, borderRadius: 10 }} />\r\n      <Text style={{ fontWeight: 'bold' }}>{item.ArticleNumber}</Text>\r\n      <Text>{item.Category}</Text>\r\n      <Text style={{ fontWeight: 'bold' }}>{\"₹\" + item.ArticleRate}</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={{ width: '100%', height: '100%', backgroundColor: '#FFFF' }}>\r\n      <ScrollView showsHorizontalScrollIndicator={false} style={{ overflow: 'hidden' }}>\r\n        <View style={{ position: 'relative', maxWidth: '100%', height: 'auto', top: 20 }}>\r\n          <FlatList\r\n            data={nameDatas}\r\n            keyExtractor={(item) => item.id}\r\n            renderItem={renderItem}\r\n            numColumns={3}\r\n            showsHorizontalScrollIndicator={false}\r\n            contentContainerStyle={{ paddingVertical: 10 }}\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n      {/* <View style={{position:'absolute',bottom:10}}>\r\n        <ButtomNavigation/>\r\n      </View> */}\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}