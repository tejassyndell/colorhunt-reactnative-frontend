{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _setNotificationCategoryAsync;\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationCategoriesModule from \"./NotificationCategoriesModule.native\";\nexport default function setNotificationCategoryAsync(_x, _x2, _x3) {\n  return (_setNotificationCategoryAsync = _setNotificationCategoryAsync || _asyncToGenerator(function* (identifier, actions, options) {\n    if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n      throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n    }\n    return yield NotificationCategoriesModule.setNotificationCategoryAsync(identifier, actions, options);\n  })).apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationCategoriesModule","setNotificationCategoryAsync","_x","_x2","_x3","_setNotificationCategoryAsync","_asyncToGenerator","identifier","actions","options","apply","arguments"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/node_modules/expo-notifications/src/setNotificationCategoryAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule.native';\nimport {\n  NotificationCategory,\n  NotificationAction,\n  NotificationCategoryOptions,\n} from './Notifications.types';\n\n/**\n * Sets the new notification category.\n * @param identifier A string to associate as the ID of this category. You will pass this string in as the `categoryIdentifier`\n * in your [`NotificationContent`](#notificationcontent) to associate a notification with this category.\n * > Don't use the characters `:` or `-` in your category identifier. If you do, categories might not work as expected.\n * @param actions An array of [`NotificationAction`s](#notificationaction), which describe the actions associated with this category.\n * @param options An optional object of additional configuration options for your category.\n * @return A Promise which resolves to the category you just have created.\n * @platform android\n * @platform ios\n * @header categories\n */\nexport default async function setNotificationCategoryAsync(\n  identifier: string,\n  actions: NotificationAction[],\n  options?: NotificationCategoryOptions\n): Promise<NotificationCategory> {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(\n    identifier,\n    actions,\n    options\n  );\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,4BAA4B;AAmBnC,wBAA8BC,4BAA4BA,CAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,QAAAC,6BAAA,GAAAA,6BAAA,IAAAC,iBAAA,CAA3C,WACbC,UAAkB,EAClBC,OAA6B,EAC7BC,OAAqC;IAErC,IAAI,CAACT,4BAA4B,CAACC,4BAA4B,EAAE;MAC9D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,8BAA8B,CAAC;;IAGhF,aAAaC,4BAA4B,CAACC,4BAA4B,CACpEM,UAAU,EACVC,OAAO,EACPC,OAAO,CACR;EACH,CAAC,GAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}