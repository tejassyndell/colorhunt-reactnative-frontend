{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _getNotificationChannelAsync;\nexport default function getNotificationChannelAsync(_x) {\n  return (_getNotificationChannelAsync = _getNotificationChannelAsync || _asyncToGenerator(function* (channelId) {\n    console.debug('Notification channels feature is only supported on Android.');\n    return null;\n  })).apply(this, arguments);\n}","map":{"version":3,"names":["getNotificationChannelAsync","_x","_getNotificationChannelAsync","_asyncToGenerator","channelId","console","debug","apply","arguments"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/node_modules/expo-notifications/src/getNotificationChannelAsync.ts"],"sourcesContent":["import { NotificationChannel } from './NotificationChannelManager.types';\n\n/**\n * Fetches information about a single notification channel.\n * @param channelId The channel's identifier.\n * @return A Promise which resolves to the channel object (of type [`NotificationChannel`](#notificationchannel)) or to `null`\n * if there was no channel found for this identifier. On platforms that do not support notification channels, it will always resolve to `null`.\n * @platform android\n * @header channels\n */\nexport default async function getNotificationChannelAsync(\n  channelId: string\n): Promise<NotificationChannel | null> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return null;\n}\n"],"mappings":";;AAUA,wBAA8BA,2BAA2BA,CAAAC,EAAA;EAAA,QAAAC,4BAAA,GAAAA,4BAAA,IAAAC,iBAAA,CAA1C,WACbC,SAAiB;IAEjBC,OAAO,CAACC,KAAK,CAAC,6DAA6D,CAAC;IAC5E,OAAO,IAAI;EACb,CAAC,GAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}