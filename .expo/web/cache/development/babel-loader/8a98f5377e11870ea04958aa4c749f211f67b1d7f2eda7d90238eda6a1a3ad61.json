{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _getAllScheduledNotificationsAsync;\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function getAllScheduledNotificationsAsync() {\n  return (_getAllScheduledNotificationsAsync = _getAllScheduledNotificationsAsync || _asyncToGenerator(function* () {\n    if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n      throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n    }\n    return yield NotificationScheduler.getAllScheduledNotificationsAsync();\n  })).apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationScheduler","getAllScheduledNotificationsAsync","_getAllScheduledNotificationsAsync","_asyncToGenerator","apply","arguments"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/node_modules/expo-notifications/src/getAllScheduledNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationRequest } from './Notifications.types';\n\n/**\n * Fetches information about all scheduled notifications.\n * @return Returns a Promise resolving to an array of objects conforming to the [`Notification`](#notification) interface.\n * @header schedule\n */\nexport default async function getAllScheduledNotificationsAsync(): Promise<NotificationRequest[]> {\n  if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n  }\n\n  return await NotificationScheduler.getAllScheduledNotificationsAsync();\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,qBAAqB;AAQ5B,wBAA8BC,iCAAiCA,CAAA;EAAA,QAAAC,kCAAA,GAAAA,kCAAA,IAAAC,iBAAA,CAAhD,aAAgD;IAC7D,IAAI,CAACH,qBAAqB,CAACC,iCAAiC,EAAE;MAC5D,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,mCAAmC,CAAC;;IAGrF,aAAaC,qBAAqB,CAACC,iCAAiC,EAAE;EACxE,CAAC,GAAAG,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}