{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { UserData } from \"../../api/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar windowWidth = Dimensions.get(\"window\").width;\nvar windowHeight = Dimensions.get(\"window\").height;\nvar CreateAccount = function CreateAccount(props) {\n  var _ref;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    address = _useState4[0],\n    setAddress = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    phoneNumber = _useState6[0],\n    setPhoneNumber = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    state = _useState8[0],\n    setState = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    city = _useState10[0],\n    setCity = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    country = _useState12[0],\n    setCountry = _useState12[1];\n  var _useState13 = useState(\"\"),\n    _useState14 = _slicedToArray(_useState13, 2),\n    pinCode = _useState14[0],\n    setPinCode = _useState14[1];\n  var _useState15 = useState(\"\"),\n    _useState16 = _slicedToArray(_useState15, 2),\n    contactPerson = _useState16[0],\n    setContactPerson = _useState16[1];\n  var _useState17 = useState(\"\"),\n    _useState18 = _slicedToArray(_useState17, 2),\n    nameError = _useState18[0],\n    setNameError = _useState18[1];\n  var _useState19 = useState(\"\"),\n    _useState20 = _slicedToArray(_useState19, 2),\n    addressError = _useState20[0],\n    setAddressError = _useState20[1];\n  var _useState21 = useState(\"\"),\n    _useState22 = _slicedToArray(_useState21, 2),\n    phoneNumberError = _useState22[0],\n    setPhoneNumberError = _useState22[1];\n  var _useState23 = useState(\"\"),\n    _useState24 = _slicedToArray(_useState23, 2),\n    stateError = _useState24[0],\n    setStateError = _useState24[1];\n  var _useState25 = useState(\"\"),\n    _useState26 = _slicedToArray(_useState25, 2),\n    cityError = _useState26[0],\n    setCityError = _useState26[1];\n  var _useState27 = useState(\"\"),\n    _useState28 = _slicedToArray(_useState27, 2),\n    countryError = _useState28[0],\n    setCountryError = _useState28[1];\n  var _useState29 = useState(\"\"),\n    _useState30 = _slicedToArray(_useState29, 2),\n    pinCodeError = _useState30[0],\n    setPinCodeError = _useState30[1];\n  var _useState31 = useState(\"\"),\n    _useState32 = _slicedToArray(_useState31, 2),\n    contactPersonError = _useState32[0],\n    setContactPersonError = _useState32[1];\n  var _useState33 = useState(false),\n    _useState34 = _slicedToArray(_useState33, 2),\n    showSuccess = _useState34[0],\n    setShowSuccess = _useState34[1];\n  var navigation = props.navigation,\n    onClose = props.onClose;\n  var handleInputChange = function handleInputChange(fieldName, value) {\n    switch (fieldName) {\n      case \"name\":\n        setNameError(\"\");\n        break;\n      case \"address\":\n        setAddressError(\"\");\n        break;\n      case \"phoneNumber\":\n        setPhoneNumberError(\"\");\n        break;\n      case \"state\":\n        setStateError(\"\");\n        break;\n      case \"city\":\n        setCityError(\"\");\n        break;\n      case \"country\":\n        setCountryError(\"\");\n        break;\n      case \"pinCode\":\n        setPinCodeError(\"\");\n        break;\n      case \"contactPerson\":\n        setContactPersonError(\"\");\n        break;\n      default:\n        break;\n    }\n    if (fieldName === \"phoneNumber\") {\n      var numericValue = value.replace(/\\D/g, \"\");\n      if (numericValue.length <= 10) {\n        setPhoneNumber(numericValue);\n      }\n    } else {\n      switch (fieldName) {\n        case \"name\":\n          setName(value);\n          break;\n        case \"address\":\n          setAddress(value);\n          break;\n        case \"phoneNumber\":\n          setPhoneNumber(value);\n          break;\n        case \"state\":\n          setState(value);\n          break;\n        case \"city\":\n          setCity(value);\n          break;\n        case \"country\":\n          setCountry(value);\n          break;\n        case \"pinCode\":\n          setPinCode(value);\n          break;\n        case \"contactPerson\":\n          setContactPerson(value);\n          break;\n        default:\n          break;\n      }\n    }\n  };\n  var handleInputBlur = function handleInputBlur(fieldName) {\n    switch (fieldName) {\n      case \"name\":\n        if (name === \"\") {\n          setNameError(\"Name is required\");\n        }\n        break;\n      case \"address\":\n        if (address === \"\") {\n          setAddressError(\"Address is required\");\n        }\n        break;\n      case \"phoneNumber\":\n        if (phoneNumber === \"\" || phoneNumber.length !== 10) {\n          setPhoneNumberError(\"Phone Number must be a 10-digit number\");\n        }\n        break;\n      case \"state\":\n        if (state === \"\") {\n          setStateError(\"State is required\");\n        }\n        break;\n      case \"city\":\n        if (city === \"\") {\n          setCityError(\"City is required\");\n        }\n        break;\n      case \"country\":\n        if (country === \"\") {\n          setCountryError(\"Country is required\");\n        }\n        break;\n      case \"pinCode\":\n        if (pinCode === \"\") {\n          setPinCodeError(\"Pincode is required\");\n        }\n        break;\n      case \"contactPerson\":\n        if (contactPerson === \"\") {\n          setContactPersonError(\"Contact Person is required\");\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  var handleFormSubmit = function handleFormSubmit() {\n    return (_ref = _ref || _asyncToGenerator(function* () {\n      clearErrors();\n      setShowSuccess(false);\n      var isValid = true;\n      if (name === \"\") {\n        setNameError(\"Name is required\");\n        isValid = false;\n      }\n      if (address === \"\") {\n        setAddressError(\"Address is required\");\n        isValid = false;\n      }\n      if (phoneNumber === \"\" || phoneNumber.length !== 10) {\n        setPhoneNumberError(\"Phone Number must be a 10-digit number\");\n        isValid = false;\n      }\n      if (state === \"\") {\n        setStateError(\"State is required\");\n        isValid = false;\n      }\n      if (city === \"\") {\n        setCityError(\"City is required\");\n        isValid = false;\n      }\n      if (country === \"\") {\n        setCountryError(\"Country is required\");\n        isValid = false;\n      }\n      if (pinCode === \"\") {\n        setPinCodeError(\"Pincode is required\");\n        isValid = false;\n      }\n      if (contactPerson === \"\") {\n        setContactPersonError(\"Contact Person is required\");\n        isValid = false;\n      }\n      if (isValid) {\n        console.log(\"Form submitted.\");\n        try {\n          var response = yield UserData({\n            name: name,\n            address: address,\n            phoneNumber: phoneNumber,\n            state: state,\n            city: city,\n            country: country,\n            pinCode: pinCode,\n            contactPerson: contactPerson\n          });\n          console.log(\"API response:\", response.data);\n          setShowSuccess(true);\n          clearFormFields();\n        } catch (error) {\n          console.error(\"Error making API request:\", error);\n        }\n      }\n    })).apply(this, arguments);\n  };\n  var clearErrors = function clearErrors() {\n    setNameError(\"\");\n    setAddressError(\"\");\n    setPhoneNumberError(\"\");\n    setStateError(\"\");\n    setCityError(\"\");\n    setCountryError(\"\");\n    setPinCodeError(\"\");\n    setContactPersonError(\"\");\n  };\n  var clearFormFields = function clearFormFields() {\n    setName(\"\");\n    setAddress(\"\");\n    setPhoneNumber(\"\");\n    setState(\"\");\n    setCity(\"\");\n    setCountry(\"\");\n    setPinCode(\"\");\n    setContactPerson(\"\");\n  };\n  var handleClose = function handleClose() {\n    onClose();\n    console.log(\"close\");\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: !showSuccess ? _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Create Account\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: onClose,\n          children: _jsx(Text, {\n            style: styles.closeText,\n            children: \"X\"\n          })\n        })]\n      }), _jsx(TextInput, {\n        style: [styles.input, nameError && styles.inputError],\n        placeholder: \"Name\",\n        value: name,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(\"name\", text);\n        },\n        onBlur: function onBlur() {\n          return handleInputBlur(\"name\");\n        }\n      }), nameError ? _jsx(Text, {\n        style: styles.errorText,\n        children: nameError\n      }) : null, _jsx(TextInput, {\n        editable: true,\n        multiline: true,\n        numberOfLines: 5,\n        maxLength: 500,\n        style: [styles.input, {\n          height: 90\n        }, addressError && styles.inputError],\n        placeholder: \"Address\",\n        value: address,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(\"address\", text);\n        },\n        onBlur: function onBlur() {\n          return handleInputBlur(\"address\");\n        }\n      }), addressError ? _jsx(Text, {\n        style: styles.errorText,\n        children: addressError\n      }) : null, _jsx(TextInput, {\n        style: [styles.input, phoneNumberError && styles.inputError],\n        placeholder: \"Phone Number\",\n        value: phoneNumber,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(\"phoneNumber\", text);\n        },\n        onBlur: function onBlur() {\n          return handleInputBlur(\"phoneNumber\");\n        }\n      }), phoneNumberError ? _jsx(Text, {\n        style: styles.errorText,\n        children: phoneNumberError\n      }) : null, _jsxs(View, {\n        style: styles.rowContainer,\n        children: [_jsxs(View, {\n          style: styles.flex1,\n          children: [_jsx(TextInput, {\n            style: [styles.input, stateError && styles.inputError, {\n              marginRight: 5\n            }],\n            placeholder: \"State\",\n            value: state,\n            onChangeText: function onChangeText(text) {\n              return handleInputChange(\"state\", text);\n            },\n            onBlur: function onBlur() {\n              return handleInputBlur(\"state\");\n            }\n          }), stateError ? _jsx(Text, {\n            style: styles.errorText,\n            children: stateError\n          }) : null]\n        }), _jsxs(View, {\n          style: styles.flex1,\n          children: [_jsx(TextInput, {\n            style: [styles.input, cityError && styles.inputError, {\n              marginLeft: 5\n            }],\n            placeholder: \"City\",\n            value: city,\n            onChangeText: function onChangeText(text) {\n              return handleInputChange(\"city\", text);\n            },\n            onBlur: function onBlur() {\n              return handleInputBlur(\"city\");\n            }\n          }), cityError ? _jsx(Text, {\n            style: styles.errorText,\n            children: cityError\n          }) : null]\n        })]\n      }), _jsxs(View, {\n        style: styles.rowContainer,\n        children: [_jsxs(View, {\n          style: styles.flex1,\n          children: [_jsx(TextInput, {\n            style: [styles.input, countryError && styles.inputError, {\n              marginRight: 5\n            }],\n            placeholder: \"Country\",\n            value: country,\n            onChangeText: function onChangeText(text) {\n              return handleInputChange(\"country\", text);\n            },\n            onBlur: function onBlur() {\n              return handleInputBlur(\"country\");\n            }\n          }), countryError ? _jsx(Text, {\n            style: styles.errorText,\n            children: countryError\n          }) : null]\n        }), _jsxs(View, {\n          style: styles.flex1,\n          children: [_jsx(TextInput, {\n            style: [styles.input, pinCodeError && styles.inputError, {\n              marginLeft: 5\n            }],\n            placeholder: \"Pincode\",\n            value: pinCode,\n            onChangeText: function onChangeText(text) {\n              return handleInputChange(\"pinCode\", text);\n            },\n            onBlur: function onBlur() {\n              return handleInputBlur(\"pinCode\");\n            }\n          }), pinCodeError ? _jsx(Text, {\n            style: styles.errorText,\n            children: pinCodeError\n          }) : null]\n        })]\n      }), _jsx(TextInput, {\n        style: [styles.input, contactPersonError && styles.inputError],\n        placeholder: \"Contact Person\",\n        value: contactPerson,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange(\"contactPerson\", text);\n        },\n        onBlur: function onBlur() {\n          return handleInputBlur(\"contactPerson\");\n        }\n      }), contactPersonError ? _jsx(Text, {\n        style: styles.errorText,\n        children: contactPersonError\n      }) : null, _jsx(View, {\n        style: {\n          width: \"100%\",\n          alignItems: \"center\"\n        },\n        children: _jsx(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: handleFormSubmit,\n          children: _jsx(Text, {\n            style: styles.submitButtonText,\n            children: \"Submit\"\n          })\n        })\n      })]\n    }) : _jsxs(View, {\n      style: styles.successContainer,\n      children: [_jsx(Image, {\n        source: require(\"../../../assets/images/Account.png\")\n      }), _jsxs(Text, {\n        style: styles.successText0,\n        children: [\"\\\"Your Account has\", \"\\n\", \"been Created\\\"\"]\n      }), _jsxs(Text, {\n        style: styles.successText,\n        children: [\"You will able to login\", \"\\n\", \"Only admin will verify your account.\"]\n      }), _jsx(TouchableOpacity, {\n        style: styles.okButton,\n        onPress: onClose,\n        children: _jsx(Text, {\n          style: styles.okButtonText,\n          children: \"OK\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    padding: 15\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: windowHeight * 0.02\n  },\n  title: {\n    fontSize: windowWidth * 0.05,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    width: \"90%\"\n  },\n  input: {\n    height: windowHeight * 0.04,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 15,\n    paddingLeft: windowWidth * 0.02,\n    fontSize: windowWidth * 0.03\n  },\n  inputError: {\n    borderColor: \"red\"\n  },\n  errorText: {\n    color: \"red\",\n    bottom: 16,\n    left: 10\n  },\n  submitButton: {\n    width: windowWidth * 0.3,\n    backgroundColor: \"black\",\n    borderRadius: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: windowHeight * 0.05\n  },\n  submitButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: windowWidth * 0.05\n  },\n  closeButton: {\n    backgroundColor: \"black\",\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  closeText: {\n    color: \"white\",\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    marginBottom: 0\n  },\n  flex1: {\n    flex: 1\n  },\n  successContainer: {\n    alignItems: \"center\",\n    marginTop: 20,\n    justifyContent: \"center\"\n  },\n  successText: {\n    fontSize: 22,\n    fontWeight: \"400\",\n    marginBottom: 10,\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    marginTop: 30,\n    color: \"#000000\"\n  },\n  okButton: {\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: windowWidth * 0.2,\n    height: windowHeight * 0.06,\n    marginTop: 40\n  },\n  okButtonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 30\n  },\n  successText0: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    marginTop: 50,\n    textAlign: \"center\"\n  }\n});\nexport default CreateAccount;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Keyboard","Dimensions","Image","UserData","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","windowWidth","get","width","windowHeight","height","CreateAccount","props","_ref","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","address","setAddress","_useState5","_useState6","phoneNumber","setPhoneNumber","_useState7","_useState8","state","setState","_useState9","_useState10","city","setCity","_useState11","_useState12","country","setCountry","_useState13","_useState14","pinCode","setPinCode","_useState15","_useState16","contactPerson","setContactPerson","_useState17","_useState18","nameError","setNameError","_useState19","_useState20","addressError","setAddressError","_useState21","_useState22","phoneNumberError","setPhoneNumberError","_useState23","_useState24","stateError","setStateError","_useState25","_useState26","cityError","setCityError","_useState27","_useState28","countryError","setCountryError","_useState29","_useState30","pinCodeError","setPinCodeError","_useState31","_useState32","contactPersonError","setContactPersonError","_useState33","_useState34","showSuccess","setShowSuccess","navigation","onClose","handleInputChange","fieldName","value","numericValue","replace","length","handleInputBlur","handleFormSubmit","_asyncToGenerator","clearErrors","isValid","console","log","response","data","clearFormFields","error","apply","arguments","handleClose","style","styles","container","children","header","title","closeButton","onPress","closeText","input","inputError","placeholder","onChangeText","text","onBlur","errorText","editable","multiline","numberOfLines","maxLength","rowContainer","flex1","marginRight","marginLeft","alignItems","submitButton","submitButtonText","successContainer","source","require","successText0","successText","okButton","okButtonText","create","padding","flexDirection","marginBottom","fontSize","fontWeight","textAlign","borderColor","borderWidth","borderRadius","paddingLeft","color","bottom","left","backgroundColor","justifyContent","flex","marginTop"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/src/components/CreateAccount/CreateAccount.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Keyboard,\r\n  Dimensions,\r\n  Image,\r\n} from \"react-native\";\r\nimport { UserData } from \"../../api/api\";\r\n\r\nconst windowWidth = Dimensions.get(\"window\").width;\r\nconst windowHeight = Dimensions.get(\"window\").height;\r\n\r\nconst CreateAccount = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n  const [pinCode, setPinCode] = useState(\"\");\r\n  const [contactPerson, setContactPerson] = useState(\"\");\r\n\r\n  const [nameError, setNameError] = useState(\"\");\r\n  const [addressError, setAddressError] = useState(\"\");\r\n  const [phoneNumberError, setPhoneNumberError] = useState(\"\");\r\n  const [stateError, setStateError] = useState(\"\");\r\n  const [cityError, setCityError] = useState(\"\");\r\n  const [countryError, setCountryError] = useState(\"\");\r\n  const [pinCodeError, setPinCodeError] = useState(\"\");\r\n  const [contactPersonError, setContactPersonError] = useState(\"\");\r\n\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n  const { navigation, onClose } = props;\r\n  const handleInputChange = (fieldName, value) => {\r\n    // Clear previous error for the field\r\n    switch (fieldName) {\r\n      case \"name\":\r\n        setNameError(\"\");\r\n        break;\r\n      case \"address\":\r\n        setAddressError(\"\");\r\n        break;\r\n      case \"phoneNumber\":\r\n        setPhoneNumberError(\"\");\r\n        break;\r\n      case \"state\":\r\n        setStateError(\"\");\r\n        break;\r\n      case \"city\":\r\n        setCityError(\"\");\r\n        break;\r\n      case \"country\":\r\n        setCountryError(\"\");\r\n        break;\r\n      case \"pinCode\":\r\n        setPinCodeError(\"\");\r\n        break;\r\n      case \"contactPerson\":\r\n        setContactPersonError(\"\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Perform validation as the user types\r\n    if (fieldName === \"phoneNumber\") {\r\n      // Remove non-digit characters from the input\r\n      const numericValue = value.replace(/\\D/g, \"\");\r\n\r\n      // Check if the numeric value has more than 10 digits\r\n      if (numericValue.length <= 10) {\r\n        setPhoneNumber(numericValue);\r\n      }\r\n    } else {\r\n      // Update the state for the field\r\n      switch (fieldName) {\r\n        case \"name\":\r\n          setName(value);\r\n          break;\r\n        case \"address\":\r\n          setAddress(value);\r\n          break;\r\n        case \"phoneNumber\":\r\n          setPhoneNumber(value);\r\n          break;\r\n        case \"state\":\r\n          setState(value);\r\n          break;\r\n        case \"city\":\r\n          setCity(value);\r\n          break;\r\n        case \"country\":\r\n          setCountry(value);\r\n          break;\r\n        case \"pinCode\":\r\n          setPinCode(value);\r\n          break;\r\n        case \"contactPerson\":\r\n          setContactPerson(value);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleInputBlur = (fieldName) => {\r\n    // Perform validation when the input field loses focus (onBlur)\r\n    switch (fieldName) {\r\n      case \"name\":\r\n        if (name === \"\") {\r\n          setNameError(\"Name is required\");\r\n        }\r\n        break;\r\n      case \"address\":\r\n        if (address === \"\") {\r\n          setAddressError(\"Address is required\");\r\n        }\r\n        break;\r\n      case \"phoneNumber\":\r\n        if (phoneNumber === \"\" || phoneNumber.length !== 10) {\r\n          setPhoneNumberError(\"Phone Number must be a 10-digit number\");\r\n        }\r\n        break;\r\n      case \"state\":\r\n        if (state === \"\") {\r\n          setStateError(\"State is required\");\r\n        }\r\n        break;\r\n      case \"city\":\r\n        if (city === \"\") {\r\n          setCityError(\"City is required\");\r\n        }\r\n        break;\r\n      case \"country\":\r\n        if (country === \"\") {\r\n          setCountryError(\"Country is required\");\r\n        }\r\n        break;\r\n      case \"pinCode\":\r\n        if (pinCode === \"\") {\r\n          setPinCodeError(\"Pincode is required\");\r\n        }\r\n        break;\r\n      case \"contactPerson\":\r\n        if (contactPerson === \"\") {\r\n          setContactPersonError(\"Contact Person is required\");\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async () => {\r\n    // Clear previous errors and success message\r\n    clearErrors();\r\n    setShowSuccess(false);\r\n\r\n    // Validate all input fields on form submission\r\n    let isValid = true;\r\n\r\n    if (name === \"\") {\r\n      setNameError(\"Name is required\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (address === \"\") {\r\n      setAddressError(\"Address is required\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (phoneNumber === \"\" || phoneNumber.length !== 10) {\r\n      setPhoneNumberError(\"Phone Number must be a 10-digit number\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (state === \"\") {\r\n      setStateError(\"State is required\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (city === \"\") {\r\n      setCityError(\"City is required\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (country === \"\") {\r\n      setCountryError(\"Country is required\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (pinCode === \"\") {\r\n      setPinCodeError(\"Pincode is required\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (contactPerson === \"\") {\r\n      setContactPersonError(\"Contact Person is required\");\r\n      isValid = false;\r\n    }\r\n\r\n    if (isValid) {\r\n      console.log(\"Form submitted.\");\r\n      try {\r\n        // Make an API request to store form data\r\n        const response = await UserData({\r\n          name,\r\n          address,\r\n          phoneNumber,\r\n          state,\r\n          city,\r\n          country,\r\n          pinCode,\r\n          contactPerson,\r\n        });\r\n        console.log(\"API response:\", response.data);\r\n        setShowSuccess(true); // Show success message\r\n        // Clear the form input fields\r\n        clearFormFields();\r\n      } catch (error) {\r\n        console.error(\"Error making API request:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setNameError(\"\");\r\n    setAddressError(\"\");\r\n    setPhoneNumberError(\"\");\r\n    setStateError(\"\");\r\n    setCityError(\"\");\r\n    setCountryError(\"\");\r\n    setPinCodeError(\"\");\r\n    setContactPersonError(\"\");\r\n  };\r\n\r\n  const clearFormFields = () => {\r\n    setName(\"\");\r\n    setAddress(\"\");\r\n    setPhoneNumber(\"\");\r\n    setState(\"\");\r\n    setCity(\"\");\r\n    setCountry(\"\");\r\n    setPinCode(\"\");\r\n    setContactPerson(\"\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    console.log(\"close\");\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {!showSuccess ? (\r\n        <>\r\n          <View style={styles.header}>\r\n            <Text style={styles.title}>Create Account</Text>\r\n            <TouchableOpacity style={styles.closeButton} onPress={onClose}>\r\n              <Text style={styles.closeText}>X</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <TextInput\r\n            style={[styles.input, nameError && styles.inputError]}\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChangeText={(text) => handleInputChange(\"name\", text)}\r\n            onBlur={() => handleInputBlur(\"name\")}\r\n          />\r\n          {nameError ? <Text style={styles.errorText}>{nameError}</Text> : null}\r\n          <TextInput\r\n            editable // Make the input editable\r\n            multiline // Allow multiple lines\r\n            numberOfLines={5} // Set the number of lines to 4\r\n            maxLength={500}\r\n            style={[\r\n              styles.input,\r\n              { height: 90 },\r\n              addressError && styles.inputError,\r\n            ]}\r\n            placeholder=\"Address\"\r\n            value={address}\r\n            onChangeText={(text) => handleInputChange(\"address\", text)}\r\n            onBlur={() => handleInputBlur(\"address\")}\r\n          />\r\n          {addressError ? (\r\n            <Text style={styles.errorText}>{addressError}</Text>\r\n          ) : null}\r\n          <TextInput\r\n            style={[styles.input, phoneNumberError && styles.inputError]}\r\n            placeholder=\"Phone Number\"\r\n            value={phoneNumber}\r\n            onChangeText={(text) => handleInputChange(\"phoneNumber\", text)}\r\n            onBlur={() => handleInputBlur(\"phoneNumber\")}\r\n          />\r\n          {phoneNumberError ? (\r\n            <Text style={styles.errorText}>{phoneNumberError}</Text>\r\n          ) : null}\r\n          <View style={styles.rowContainer}>\r\n            <View style={styles.flex1}>\r\n              <TextInput\r\n                style={[\r\n                  styles.input,\r\n                  stateError && styles.inputError,\r\n                  { marginRight: 5 },\r\n                ]}\r\n                placeholder=\"State\"\r\n                value={state}\r\n                onChangeText={(text) => handleInputChange(\"state\", text)}\r\n                onBlur={() => handleInputBlur(\"state\")}\r\n              />\r\n              {stateError ? (\r\n                <Text style={styles.errorText}>{stateError}</Text>\r\n              ) : null}\r\n            </View>\r\n            <View style={styles.flex1}>\r\n              <TextInput\r\n                style={[\r\n                  styles.input,\r\n                  cityError && styles.inputError,\r\n                  { marginLeft: 5 },\r\n                ]}\r\n                placeholder=\"City\"\r\n                value={city}\r\n                onChangeText={(text) => handleInputChange(\"city\", text)}\r\n                onBlur={() => handleInputBlur(\"city\")}\r\n              />\r\n              {cityError ? (\r\n                <Text style={styles.errorText}>{cityError}</Text>\r\n              ) : null}\r\n            </View>\r\n          </View>\r\n          <View style={styles.rowContainer}>\r\n            <View style={styles.flex1}>\r\n              <TextInput\r\n                style={[\r\n                  styles.input,\r\n                  countryError && styles.inputError,\r\n                  { marginRight: 5 },\r\n                ]}\r\n                placeholder=\"Country\"\r\n                value={country}\r\n                onChangeText={(text) => handleInputChange(\"country\", text)}\r\n                onBlur={() => handleInputBlur(\"country\")}\r\n              />\r\n              {countryError ? (\r\n                <Text style={styles.errorText}>{countryError}</Text>\r\n              ) : null}\r\n            </View>\r\n            <View style={styles.flex1}>\r\n              <TextInput\r\n                style={[\r\n                  styles.input,\r\n                  pinCodeError && styles.inputError,\r\n                  { marginLeft: 5 },\r\n                ]}\r\n                placeholder=\"Pincode\"\r\n                value={pinCode}\r\n                onChangeText={(text) => handleInputChange(\"pinCode\", text)}\r\n                onBlur={() => handleInputBlur(\"pinCode\")}\r\n              />\r\n              {pinCodeError ? (\r\n                <Text style={styles.errorText}>{pinCodeError}</Text>\r\n              ) : null}\r\n            </View>\r\n          </View>\r\n          <TextInput\r\n            style={[styles.input, contactPersonError && styles.inputError]}\r\n            placeholder=\"Contact Person\"\r\n            value={contactPerson}\r\n            onChangeText={(text) => handleInputChange(\"contactPerson\", text)}\r\n            onBlur={() => handleInputBlur(\"contactPerson\")}\r\n          />\r\n          {contactPersonError ? (\r\n            <Text style={styles.errorText}>{contactPersonError}</Text>\r\n          ) : null}\r\n\r\n          <View style={{ width: \"100%\", alignItems: \"center\" }}>\r\n            <TouchableOpacity\r\n              style={styles.submitButton}\r\n              onPress={handleFormSubmit}\r\n            >\r\n              <Text style={styles.submitButtonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </>\r\n      ) : (\r\n        <View style={styles.successContainer}>\r\n          <Image source={require(\"../../../assets/images/Account.png\")} />\r\n          <Text style={styles.successText0}>\r\n            \"Your Account has{\"\\n\"}been Created\"\r\n          </Text>\r\n\r\n          <Text style={styles.successText}>\r\n            You will able to login{\"\\n\"}Only admin will verify your account.\r\n          </Text>\r\n          <TouchableOpacity style={styles.okButton} onPress={onClose}>\r\n            <Text style={styles.okButtonText}>OK</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 15,\r\n  },\r\n  header: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: windowHeight * 0.02,\r\n  },\r\n  title: {\r\n    fontSize: windowWidth * 0.05,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    width: \"90%\",\r\n  },\r\n  input: {\r\n    height: windowHeight * 0.04,\r\n    borderColor: \"gray\",\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginBottom: 15,\r\n    paddingLeft: windowWidth * 0.02,\r\n    fontSize: windowWidth * 0.03,\r\n  },\r\n  inputError: {\r\n    borderColor: \"red\",\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    bottom: 16,\r\n    left: 10,\r\n  },\r\n  submitButton: {\r\n    width: windowWidth * 0.3,\r\n    backgroundColor: \"black\",\r\n    borderRadius: 5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: windowHeight * 0.05,\r\n  },\r\n  submitButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: windowWidth * 0.05,\r\n  },\r\n  closeButton: {\r\n    backgroundColor: \"black\",\r\n    borderRadius: 20,\r\n    width: 40,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  closeText: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"row\",\r\n    marginBottom: 0,\r\n  },\r\n  flex1: {\r\n    flex: 1,\r\n  },\r\n  successContainer: {\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  successText: {\r\n    fontSize: 22,\r\n    fontWeight: \"400\",\r\n    marginBottom: 10,\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    marginTop: 30,\r\n    color: \"#000000\",\r\n  },\r\n  okButton: {\r\n    backgroundColor: \"black\",\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: windowWidth * 0.2,\r\n    height: windowHeight * 0.06,\r\n    marginTop: 40,\r\n  },\r\n  okButtonText: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 30,\r\n  },\r\n  successText0: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    marginTop: 50,\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nexport default CreateAccount;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}