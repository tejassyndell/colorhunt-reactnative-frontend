{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { component } from \"./component\";\nvar Notifications = {\n  handler: component,\n  onRegister: false,\n  onRegistrationError: false,\n  onNotification: false,\n  onAction: false,\n  onRemoteFetch: false,\n  isLoaded: false,\n  isPopInitialNotification: false,\n  isPermissionsRequestPending: false,\n  permissions: {\n    alert: true,\n    badge: true,\n    sound: true\n  }\n};\nNotifications.callNative = function (name, params) {\n  if (typeof this.handler[name] === 'function') {\n    var _this$handler;\n    if (typeof params !== 'array' && typeof params !== 'object') {\n      params = [];\n    }\n    return (_this$handler = this.handler)[name].apply(_this$handler, _toConsumableArray(params));\n  } else {\n    return null;\n  }\n};\nNotifications.configure = function (options) {\n  var _this = this;\n  if (typeof options.onRegister !== 'undefined') {\n    this.onRegister = options.onRegister;\n  }\n  if (typeof options.onRegistrationError !== 'undefined') {\n    this.onRegistrationError = options.onRegistrationError;\n  }\n  if (typeof options.onNotification !== 'undefined') {\n    this.onNotification = options.onNotification;\n  }\n  if (typeof options.onAction !== 'undefined') {\n    this.onAction = options.onAction;\n  }\n  if (typeof options.permissions !== 'undefined') {\n    this.permissions = options.permissions;\n  }\n  if (typeof options.onRemoteFetch !== 'undefined') {\n    this.onRemoteFetch = options.onRemoteFetch;\n  }\n  if (this.isLoaded === false) {\n    this._onRegister = this._onRegister.bind(this);\n    this._onRegistrationError = this._onRegistrationError.bind(this);\n    this._onNotification = this._onNotification.bind(this);\n    this._onRemoteFetch = this._onRemoteFetch.bind(this);\n    this._onAction = this._onAction.bind(this);\n    this.callNative('addEventListener', ['register', this._onRegister]);\n    this.callNative('addEventListener', ['registrationError', this._onRegistrationError]);\n    this.callNative('addEventListener', ['notification', this._onNotification]);\n    this.callNative('addEventListener', ['localNotification', this._onNotification]);\n    Platform.OS === 'android' ? this.callNative('addEventListener', ['action', this._onAction]) : null;\n    Platform.OS === 'android' ? this.callNative('addEventListener', ['remoteFetch', this._onRemoteFetch]) : null;\n    this.isLoaded = true;\n  }\n  var handlePopInitialNotification = function handlePopInitialNotification(state) {\n    if ('active' !== state) {\n      return;\n    }\n    if (options.popInitialNotification === undefined || options.popInitialNotification === true) {\n      _this.popInitialNotification(function (firstNotification) {\n        if (this.isPopInitialNotification) {\n          return;\n        }\n        this.isPopInitialNotification = true;\n        if (!firstNotification || false === firstNotification.userInteraction) {\n          return;\n        }\n        this._onNotification(firstNotification, true);\n      }.bind(_this));\n    }\n  };\n  AppState.addEventListener('change', handlePopInitialNotification.bind(this));\n  handlePopInitialNotification(AppState.currentState);\n  if (options.requestPermissions !== false) {\n    this._requestPermissions();\n  }\n};\nNotifications.unregister = function () {\n  this.callNative('removeEventListener', ['register', this._onRegister]);\n  this.callNative('removeEventListener', ['registrationError', this._onRegistrationError]);\n  this.callNative('removeEventListener', ['notification', this._onNotification]);\n  this.callNative('removeEventListener', ['localNotification', this._onNotification]);\n  Platform.OS === 'android' ? this.callNative('removeEventListener', ['action', this._onAction]) : null;\n  Platform.OS === 'android' ? this.callNative('removeEventListener', ['remoteFetch', this._onRemoteFetch]) : null;\n  this.isLoaded = false;\n};\nNotifications.localNotification = function (_ref) {\n  var details = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n  if ('android' === Platform.OS && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n  if (details && typeof details.id === 'number') {\n    if (isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    } else {\n      details.id = '' + details.id;\n    }\n  }\n  if (Platform.OS === 'ios') {\n    var soundName = details.soundName ? details.soundName : 'default';\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = '';\n    }\n    if (details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n    this.handler.addNotificationRequest({\n      id: !details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id,\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      badge: details.number,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo\n    });\n  } else {\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      } else {\n        details.number = '' + details.number;\n      }\n    }\n    if (details && typeof details.shortcutId === 'number') {\n      if (isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      } else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n    if (details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n    if (details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n    if (details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n    this.handler.presentLocalNotification(details);\n  }\n};\nNotifications.localNotificationSchedule = function (_ref2) {\n  var details = Object.assign({}, (_objectDestructuringEmpty(_ref2), _ref2));\n  if ('android' === Platform.os && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n  if (details && typeof details.id === 'number') {\n    if (isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    } else {\n      details.id = '' + details.id;\n    }\n  }\n  if (Platform.OS === 'ios') {\n    var soundName = details.soundName ? details.soundName : 'default';\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = '';\n    }\n    if (details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n    var repeatsComponent = {\n      second: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      minute: ['hour', 'day', 'week', 'month'].includes(details.repeatType),\n      hour: ['day', 'week', 'month'].includes(details.repeatType),\n      day: details.repeatType == \"month\",\n      dayOfWeek: details.repeatType == \"week\"\n    };\n    var iosDetails = {\n      id: !details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id,\n      fireDate: details.date.toISOString(),\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo,\n      repeats: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      repeatsComponent: repeatsComponent\n    };\n    if (details.number) {\n      iosDetails.badge = parseInt(details.number, 10);\n    }\n    this.handler.addNotificationRequest(iosDetails);\n  } else {\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      } else {\n        details.number = '' + details.number;\n      }\n    }\n    if (details && typeof details.shortcutId === 'number') {\n      if (isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      } else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n    if (details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n    if (details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n    if (details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n    details.fireDate = details.date.getTime();\n    delete details.date;\n    this.handler.scheduleLocalNotification(details);\n  }\n};\nNotifications._onRegister = function (token) {\n  if (this.onRegister !== false) {\n    this.onRegister({\n      token: token,\n      os: Platform.OS\n    });\n  }\n};\nNotifications._onRegistrationError = function (err) {\n  if (this.onRegistrationError !== false) {\n    this.onRegistrationError(err);\n  }\n};\nNotifications._onRemoteFetch = function (notificationData) {\n  if (this.onRemoteFetch !== false) {\n    this.onRemoteFetch(notificationData);\n  }\n};\nNotifications._onAction = function (_ref3) {\n  var notification = Object.assign({}, (_objectDestructuringEmpty(_ref3), _ref3));\n  if (typeof notification.data === 'string') {\n    try {\n      notification.data = JSON.parse(notificationData.data);\n    } catch (e) {}\n  }\n  this.onAction(notification);\n};\nNotifications._transformNotificationObject = function (data) {\n  var isFromBackground = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (!data) {\n    return;\n  }\n  if (isFromBackground === null) {\n    isFromBackground = data.foreground === false || AppState.currentState === 'background' || AppState.currentState === 'unknown';\n  }\n  var _notification;\n  if (Platform.OS === 'ios') {\n    var notifData = data.getData();\n    _notification = {\n      id: notifData == null ? void 0 : notifData.id,\n      foreground: !isFromBackground,\n      userInteraction: (notifData == null ? void 0 : notifData.userInteraction) === 1 || false,\n      message: data.getMessage(),\n      data: notifData,\n      badge: data.getBadgeCount(),\n      title: data.getTitle(),\n      subtitle: data.getSubtitle(),\n      soundName: data.getSound(),\n      fireDate: Date.parse(data._fireDate),\n      action: data.getActionIdentifier(),\n      reply_text: data.getUserText(),\n      finish: function finish(res) {\n        return data.finish(res);\n      }\n    };\n    if (isNaN(_notification.fireDate)) {\n      delete _notification.fireDate;\n    }\n  } else {\n    _notification = _objectSpread({\n      foreground: !isFromBackground,\n      finish: function finish() {}\n    }, data);\n    if (typeof _notification.data === 'string') {\n      try {\n        _notification.data = JSON.parse(_notification.data);\n      } catch (e) {}\n    }\n    if (typeof _notification.userInfo === 'string') {\n      try {\n        _notification.userInfo = JSON.parse(_notification.userInfo);\n      } catch (e) {}\n    }\n    _notification.data = _objectSpread(_objectSpread({}, typeof _notification.userInfo === 'object' ? _notification.userInfo : {}), typeof _notification.data === 'object' ? _notification.data : {});\n    delete _notification.userInfo;\n    delete _notification.notificationId;\n  }\n  return _notification;\n};\nNotifications._onNotification = function (data) {\n  var initialNotification = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (this.onNotification !== false) {\n    var notification = data;\n    if (!initialNotification) {\n      notification = this._transformNotificationObject(data);\n    }\n    this.onNotification(notification);\n  }\n};\nNotifications._onPermissionResult = function () {\n  this.isPermissionsRequestPending = false;\n};\nNotifications._requestPermissions = function () {\n  if (Platform.OS === 'ios') {\n    if (this.isPermissionsRequestPending === false) {\n      this.isPermissionsRequestPending = true;\n      return this.callNative('requestPermissions', [this.permissions]).then(this._onPermissionResult.bind(this)).catch(this._onPermissionResult.bind(this));\n    }\n  } else if (Platform.OS === 'android') {\n    return this.callNative('requestPermissions', []);\n  }\n};\nNotifications.requestPermissions = function () {\n  if (Platform.OS === 'ios') {\n    return this.callNative('requestPermissions', [this.permissions]);\n  } else if (Platform.OS === 'android') {\n    return this.callNative('requestPermissions', []);\n  }\n};\nNotifications.subscribeToTopic = function () {\n  return this.callNative('subscribeToTopic', arguments);\n};\nNotifications.unsubscribeFromTopic = function () {\n  return this.callNative('unsubscribeFromTopic', arguments);\n};\nNotifications.presentLocalNotification = function () {\n  return this.callNative('presentLocalNotification', arguments);\n};\nNotifications.scheduleLocalNotification = function () {\n  return this.callNative('scheduleLocalNotification', arguments);\n};\nNotifications.cancelLocalNotifications = function (userInfo) {\n  console.warn('This method is now deprecated, please use `cancelLocalNotification` (remove the ending `s`).');\n  return this.cancelLocalNotification(userInfo);\n};\nNotifications.cancelLocalNotification = function (notificationId) {\n  if (typeof notificationId === 'object') {\n    var _notificationId;\n    notificationId = (_notificationId = notificationId) == null ? void 0 : _notificationId.id;\n  }\n  if (typeof notificationId === 'number') {\n    notificationId = '' + notificationId;\n  }\n  if (Platform.OS === 'ios') {\n    return this.callNative('removePendingNotificationRequests', [[notificationId]]);\n  } else {\n    return this.callNative('cancelLocalNotification', [notificationId]);\n  }\n};\nNotifications.clearLocalNotification = function () {\n  return this.callNative('clearLocalNotification', arguments);\n};\nNotifications.cancelAllLocalNotifications = function () {\n  if (Platform.OS === 'ios') {\n    return this.callNative('removeAllPendingNotificationRequests', arguments);\n  } else if (Platform.OS === 'android') {\n    return this.callNative('cancelAllLocalNotifications', arguments);\n  }\n};\nNotifications.setApplicationIconBadgeNumber = function () {\n  return this.callNative('setApplicationIconBadgeNumber', arguments);\n};\nNotifications.getApplicationIconBadgeNumber = function () {\n  return this.callNative('getApplicationIconBadgeNumber', arguments);\n};\nNotifications.popInitialNotification = function (handler) {\n  var _this2 = this;\n  this.callNative('getInitialNotification').then(function (result) {\n    handler(_this2._transformNotificationObject(result, true));\n  });\n};\nNotifications.checkPermissions = function () {\n  return this.callNative('checkPermissions', arguments);\n};\nNotifications.abandonPermissions = function () {\n  return this.callNative('abandonPermissions', arguments);\n};\nNotifications.clearAllNotifications = function () {\n  return this.callNative('clearAllNotifications', arguments);\n};\nNotifications.removeAllDeliveredNotifications = function () {\n  return this.callNative('removeAllDeliveredNotifications', arguments);\n};\nNotifications.getDeliveredNotifications = function () {\n  return this.callNative('getDeliveredNotifications', arguments);\n};\nNotifications.getScheduledLocalNotifications = function (callback) {\n  var mapNotifications = function mapNotifications(notifications) {\n    var mappedNotifications = [];\n    if ((notifications == null ? void 0 : notifications.length) > 0) {\n      if (Platform.OS === 'ios') {\n        mappedNotifications = notifications.map(function (notif) {\n          return {\n            soundName: notif == null ? void 0 : notif.sound,\n            id: notif.id,\n            date: notif.date ? new Date(notif.date) : null,\n            number: notif == null ? void 0 : notif.badge,\n            message: notif == null ? void 0 : notif.body,\n            title: notif == null ? void 0 : notif.title,\n            data: notif == null ? void 0 : notif.userInfo\n          };\n        });\n      } else if (Platform.OS === 'android') {\n        mappedNotifications = notifications.map(function (notif) {\n          try {\n            notif.data = JSON.parse(notif.data);\n          } catch (e) {}\n          return {\n            soundName: notif.soundName,\n            repeatInterval: notif.repeatInterval,\n            id: notif.id,\n            date: new Date(notif.date),\n            number: notif.number,\n            message: notif.message,\n            title: notif.title,\n            data: notif.data\n          };\n        });\n      }\n    }\n    callback(mappedNotifications);\n  };\n  if (Platform.OS === 'ios') {\n    return this.callNative('getPendingNotificationRequests', [mapNotifications]);\n  } else {\n    return this.callNative('getScheduledLocalNotifications', [mapNotifications]);\n  }\n};\nNotifications.removeDeliveredNotifications = function () {\n  return this.callNative('removeDeliveredNotifications', arguments);\n};\nNotifications.invokeApp = function () {\n  return this.callNative('invokeApp', arguments);\n};\nNotifications.getChannels = function () {\n  return this.callNative('getChannels', arguments);\n};\nNotifications.channelExists = function () {\n  return this.callNative('channelExists', arguments);\n};\nNotifications.createChannel = function () {\n  return this.callNative('createChannel', arguments);\n};\nNotifications.channelBlocked = function () {\n  return this.callNative('channelBlocked', arguments);\n};\nNotifications.deleteChannel = function () {\n  return this.callNative('deleteChannel', arguments);\n};\nNotifications.setNotificationCategories = function () {\n  return this.callNative('setNotificationCategories', arguments);\n};\nNotifications.Importance = Object.freeze({\n  DEFAULT: 3,\n  HIGH: 4,\n  LOW: 2,\n  MIN: 1,\n  NONE: 0,\n  UNSPECIFIED: -1000\n});\nmodule.exports = Notifications;","map":{"version":3,"names":["_defineProperty","_objectDestructuringEmpty","_toConsumableArray","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","AppState","Platform","component","Notifications","handler","onRegister","onRegistrationError","onNotification","onAction","onRemoteFetch","isLoaded","isPopInitialNotification","isPermissionsRequestPending","permissions","alert","badge","sound","callNative","name","params","_this$handler","configure","options","_this","_onRegister","bind","_onRegistrationError","_onNotification","_onRemoteFetch","_onAction","OS","handlePopInitialNotification","state","popInitialNotification","undefined","firstNotification","userInteraction","addEventListener","currentState","requestPermissions","_requestPermissions","unregister","localNotification","_ref","details","assign","channelId","console","warn","id","isNaN","soundName","hasOwnProperty","playSound","picture","userInfo","image","addNotificationRequest","Math","floor","random","pow","toString","title","subtitle","body","message","number","isSilent","category","shortcutId","Array","isArray","actions","JSON","stringify","bigPictureUrl","presentLocalNotification","localNotificationSchedule","_ref2","os","repeatsComponent","second","includes","repeatType","minute","hour","day","dayOfWeek","iosDetails","fireDate","date","toISOString","repeats","parseInt","getTime","scheduleLocalNotification","token","err","notificationData","_ref3","notification","data","parse","e","_transformNotificationObject","isFromBackground","foreground","_notification","notifData","getData","getMessage","getBadgeCount","getTitle","getSubtitle","getSound","Date","_fireDate","action","getActionIdentifier","reply_text","getUserText","finish","res","notificationId","initialNotification","_onPermissionResult","then","catch","subscribeToTopic","unsubscribeFromTopic","cancelLocalNotifications","cancelLocalNotification","_notificationId","clearLocalNotification","cancelAllLocalNotifications","setApplicationIconBadgeNumber","getApplicationIconBadgeNumber","_this2","result","checkPermissions","abandonPermissions","clearAllNotifications","removeAllDeliveredNotifications","getDeliveredNotifications","getScheduledLocalNotifications","callback","mapNotifications","notifications","mappedNotifications","map","notif","repeatInterval","removeDeliveredNotifications","invokeApp","getChannels","channelExists","createChannel","channelBlocked","deleteChannel","setNotificationCategories","Importance","freeze","DEFAULT","HIGH","LOW","MIN","NONE","UNSPECIFIED","module","exports"],"sources":["D:/Rohit Project task/colorhunt-reactnative-frontend/node_modules/react-native-push-notification/index.js"],"sourcesContent":["/**\n * @providesModule Notifications\n */\n\n'use strict';\n\nimport { AppState, Platform } from 'react-native';\nimport { component } from './component';\n\nconst Notifications = {\n  handler: component,\n  onRegister: false,\n  onRegistrationError: false,\n  onNotification: false,\n  onAction: false,\n  onRemoteFetch: false,\n  isLoaded: false,\n  isPopInitialNotification: false,\n\n  isPermissionsRequestPending: false,\n\n  permissions: {\n    alert: true,\n    badge: true,\n    sound: true\n  }\n};\n\nNotifications.callNative = function(name, params) {\n  if ( typeof this.handler[name] === 'function' ) {\n    if ( typeof params !== 'array' &&\n       typeof params !== 'object' ) {\n      params = [];\n    }\n\n    return this.handler[name](...params);\n  } else {\n    return null;\n  }\n};\n\n/**\n * Configure local and remote notifications\n * @param {Object}    options\n * @param {function}  options.onRegister - Fired when the user registers for remote notifications.\n * @param {function}  options.onNotification - Fired when a remote notification is received.\n * @param {function}  options.onAction - Fired when a remote notification is received.\n * @param {function}  options.onRegistrationError - Fired when the user fails to register for remote notifications.\n * @param {Object}    options.permissions - Permissions list\n * @param {Boolean}   options.requestPermissions - Check permissions when register\n */\nNotifications.configure = function(options) {\n  if ( typeof options.onRegister !== 'undefined' ) {\n    this.onRegister = options.onRegister;\n  }\n\n  if ( typeof options.onRegistrationError !== 'undefined' ) {\n    this.onRegistrationError = options.onRegistrationError;\n  }\n\n  if ( typeof options.onNotification !== 'undefined' ) {\n    this.onNotification = options.onNotification;\n  }\n\n  if ( typeof options.onAction !== 'undefined' ) {\n    this.onAction = options.onAction;\n  }\n\n  if ( typeof options.permissions !== 'undefined' ) {\n    this.permissions = options.permissions;\n  }\n\n  if ( typeof options.onRemoteFetch !== 'undefined' ) {\n    this.onRemoteFetch = options.onRemoteFetch;\n  }\n\n  if ( this.isLoaded === false ) {\n    this._onRegister = this._onRegister.bind(this);\n    this._onRegistrationError = this._onRegistrationError.bind(this);\n    this._onNotification = this._onNotification.bind(this);\n    this._onRemoteFetch = this._onRemoteFetch.bind(this);\n    this._onAction = this._onAction.bind(this);\n    this.callNative( 'addEventListener', [ 'register', this._onRegister ] );\n    this.callNative( 'addEventListener', [ 'registrationError', this._onRegistrationError ] );\n    this.callNative( 'addEventListener', [ 'notification', this._onNotification ] );\n    this.callNative( 'addEventListener', [ 'localNotification', this._onNotification ] );\n    Platform.OS === 'android' ? this.callNative( 'addEventListener', [ 'action', this._onAction ] ) : null\n    Platform.OS === 'android' ? this.callNative( 'addEventListener', [ 'remoteFetch', this._onRemoteFetch ] ) : null\n\n    this.isLoaded = true;\n  }\n\n  const handlePopInitialNotification = (state) => {\n    if('active' !== state) {\n      return;\n    }\n\n    if (options.popInitialNotification === undefined || options.popInitialNotification === true) {\n      this.popInitialNotification(function(firstNotification) {\n        if(this.isPopInitialNotification) {\n          return;\n        }\n        \n        this.isPopInitialNotification = true;\n        \n        if (!firstNotification || false === firstNotification.userInteraction) {\n          return;\n        }\n        \n        this._onNotification(firstNotification, true);\n      }.bind(this));\n    }\n  }\n\n  AppState.addEventListener('change', handlePopInitialNotification.bind(this));\n\n  handlePopInitialNotification(AppState.currentState);\n\n  if ( options.requestPermissions !== false ) {\n    this._requestPermissions();\n  }\n};\n\n/* Unregister */\nNotifications.unregister = function() {\n  this.callNative( 'removeEventListener', [ 'register', this._onRegister ] )\n  this.callNative( 'removeEventListener', [ 'registrationError', this._onRegistrationError ] )\n  this.callNative( 'removeEventListener', [ 'notification', this._onNotification ] )\n  this.callNative( 'removeEventListener', [ 'localNotification', this._onNotification ] )\n  Platform.OS === 'android' ? this.callNative( 'removeEventListener', [ 'action', this._onAction ] ) : null\n  Platform.OS === 'android' ? this.callNative( 'removeEventListener', [ 'remoteFetch', this._onRemoteFetch ] ) : null\n  this.isLoaded = false;\n};\n\n/**\n * Local Notifications\n * @param {Object}    details\n * @param {String}    details.title  -  The title displayed in the notification alert.\n * @param {String}    details.message - The message displayed in the notification alert.\n * @param {String}    details.ticker -  ANDROID ONLY: The ticker displayed in the status bar.\n * @param {Object}    details.userInfo -  iOS ONLY: The userInfo used in the notification alert.\n */\nNotifications.localNotification = function({...details}) {\n  if ('android' === Platform.OS && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n\n  if (details && typeof details.id === 'number') {\n    if (isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    }\n    else {\n      details.id = '' + details.id;\n    }\n  }\n\n  if (Platform.OS === 'ios') {\n    // https://developer.apple.com/reference/uikit/uilocalnotification\n\n    let soundName = details.soundName ? details.soundName : 'default'; // play sound (and vibrate) as default behaviour\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = ''; // empty string results in no sound (and no vibration)\n    }\n\n    if(details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n\n    // for valid fields see: https://github.com/react-native-push-notification-ios/push-notification-ios#addnotificationrequest\n\n    this.handler.addNotificationRequest({\n      id: (!details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id),\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      badge: details.number,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo\n    });\n  } else {\n    if (details && typeof details.number === 'number') {\n      if(isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      }\n      else {\n        details.number = '' + details.number;\n      }\n    }\n\n    if (details && typeof details.shortcutId === 'number') {\n      if(isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      }\n      else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n\n    if(details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n\n    if(details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n  \n    if(details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n\n    this.handler.presentLocalNotification(details);\n  }\n};\n\n/**\n * Local Notifications Schedule\n * @param {Object}    details (same as localNotification)\n * @param {Date}    details.date - The date and time when the system should deliver the notification\n */\nNotifications.localNotificationSchedule = function({...details}) {\n  if ('android' === Platform.os && details && !details.channelId) {\n    console.warn('No channel id passed, notifications may not work.');\n  }\n  \n  if (details && typeof details.id === 'number') {\n    if(isNaN(details.id)) {\n      console.warn('NaN value has been passed as id');\n      delete details.id;\n    }\n    else {\n      details.id = '' + details.id;\n    }\n  }\n\n  if (Platform.OS === 'ios') {\n    let soundName = details.soundName ? details.soundName : 'default'; // play sound (and vibrate) as default behaviour\n\n    if (details.hasOwnProperty('playSound') && !details.playSound) {\n      soundName = ''; // empty string results in no sound (and no vibration)\n    }\n\n    if(details.picture) {\n      details.userInfo = details.userInfo || {};\n      details.userInfo.image = details.picture;\n    }\n    \n    const repeatsComponent = {\n      second: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      minute: ['hour', 'day', 'week', 'month'].includes(details.repeatType),\n      hour: ['day', 'week', 'month'].includes(details.repeatType),\n      day: details.repeatType == \"month\",\n      dayOfWeek: details.repeatType == \"week\",\n    };\n\n    const iosDetails = {\n      id: (!details.id ? Math.floor(Math.random() * Math.pow(2, 32)).toString() : details.id),\n      fireDate: details.date.toISOString(),\n      title: details.title,\n      subtitle: details.subtitle,\n      body: details.message,\n      sound: soundName,\n      isSilent: details.playSound === false,\n      category: details.category,\n      userInfo: details.userInfo,\n      repeats: ['minute', 'hour', 'day', 'week', 'month'].includes(details.repeatType),\n      repeatsComponent: repeatsComponent\n    };\n\n    if (details.number) {\n      iosDetails.badge = parseInt(details.number, 10);\n    }\n\n    this.handler.addNotificationRequest(iosDetails);\n  } else {\n    if (details && typeof details.number === 'number') {\n      if (isNaN(details.number)) {\n        console.warn('NaN value has been passed as number');\n        delete details.number;\n      }\n      else {\n        details.number = '' + details.number;\n      }\n    }\n\n    if (details && typeof details.shortcutId === 'number') {\n      if (isNaN(details.shortcutId)) {\n        console.warn('NaN value has been passed as shortcutId');\n        delete details.shortcutId;\n      }\n      else {\n        details.shortcutId = '' + details.shortcutId;\n      }\n    }\n  \n    if(details && Array.isArray(details.actions)) {\n      details.actions = JSON.stringify(details.actions);\n    }\n\n    if(details.userInfo) {\n      details.userInfo = JSON.stringify(details.userInfo);\n    }\n\n    if(details.picture && !details.bigPictureUrl) {\n      details.bigPictureUrl = details.picture;\n    }\n\n    details.fireDate = details.date.getTime();\n    delete details.date;\n\n    this.handler.scheduleLocalNotification(details);\n  }\n};\n\n/* Internal Functions */\nNotifications._onRegister = function(token) {\n  if ( this.onRegister !== false ) {\n    this.onRegister({\n      token: token,\n      os: Platform.OS\n    });\n  }\n};\n\nNotifications._onRegistrationError = function(err) {\n  if ( this.onRegistrationError !== false ) {\n    this.onRegistrationError(err);\n  }\n};\n\nNotifications._onRemoteFetch = function(notificationData) {\n  if ( this.onRemoteFetch !== false ) {\n    this.onRemoteFetch(notificationData)\n  }\n};\n\nNotifications._onAction = function({...notification}) {\n  if ( typeof notification.data === 'string' ) {\n    try {\n      notification.data = JSON.parse(notificationData.data);\n    } catch(e) {\n      /* void */\n    }\n  }\n\n  this.onAction(notification);\n}\n\nNotifications._transformNotificationObject = function(data, isFromBackground = null) {\n  if(!data) {\n    return;\n  }\n\n  if ( isFromBackground === null ) {\n    isFromBackground = (\n      data.foreground === false ||\n      AppState.currentState === 'background' ||\n      AppState.currentState === 'unknown'\n    );\n  }\n\n  let _notification;\n\n  if ( Platform.OS === 'ios' ) {\n    const notifData = data.getData();\n\n    _notification = {\n      id: notifData?.id,\n      foreground: !isFromBackground,\n      userInteraction: notifData?.userInteraction === 1 || false,\n      message: data.getMessage(),\n      data: notifData,\n      badge: data.getBadgeCount(),\n      title: data.getTitle(),\n      subtitle: data.getSubtitle(),\n      soundName: data.getSound(),\n      fireDate: Date.parse(data._fireDate),\n      action: data.getActionIdentifier(),\n      reply_text: data.getUserText(),\n      finish: (res) => data.finish(res)\n    };\n\n    if(isNaN(_notification.fireDate)) {\n      delete _notification.fireDate;\n    }\n\n  } else {\n    _notification = {\n      foreground: !isFromBackground,\n      finish: () => {},\n      ...data,\n    };\n\n    if ( typeof _notification.data === 'string' ) {\n      try {\n        _notification.data = JSON.parse(_notification.data);\n      } catch(e) {\n        /* void */\n      }\n    }\n    \n    if ( typeof _notification.userInfo === 'string' ) {\n      try {\n        _notification.userInfo = JSON.parse(_notification.userInfo);\n      } catch(e) {\n        /* void */\n      }\n    }\n\n\n    _notification.data = {\n      ...(typeof _notification.userInfo === 'object' ? _notification.userInfo : {}),\n      ...(typeof _notification.data === 'object' ? _notification.data : {}),\n    };\n\n    delete _notification.userInfo;\n    delete _notification.notificationId;\n  }\n\n  return _notification;\n}\n\nNotifications._onNotification = function(data, initialNotification = false) {\n  if ( this.onNotification !== false ) {\n    let notification = data;\n\n    if(!initialNotification) {\n      notification = this._transformNotificationObject(data);\n    }\n\n    this.onNotification(notification);\n  }\n};\n\n/* onResultPermissionResult */\nNotifications._onPermissionResult = function() {\n  this.isPermissionsRequestPending = false;\n};\n\n// Prevent requestPermissions called twice if ios result is pending\nNotifications._requestPermissions = function() {\n  if ( Platform.OS === 'ios' ) {\n    if ( this.isPermissionsRequestPending === false ) {\n      this.isPermissionsRequestPending = true;\n      return this.callNative( 'requestPermissions', [ this.permissions ])\n              .then(this._onPermissionResult.bind(this))\n              .catch(this._onPermissionResult.bind(this));\n    }\n  } else if (Platform.OS === 'android') {\n    return this.callNative( 'requestPermissions', []);\n  }\n};\n\n// Stock requestPermissions function\nNotifications.requestPermissions = function() {\n  if ( Platform.OS === 'ios' ) {\n    return this.callNative( 'requestPermissions', [ this.permissions ]);\n  } else if (Platform.OS === 'android') {\n    return this.callNative( 'requestPermissions', []);\n  }\n};\n\n/* Fallback functions */\nNotifications.subscribeToTopic = function() {\n  return this.callNative('subscribeToTopic', arguments);\n};\n\nNotifications.unsubscribeFromTopic = function () {\n  return this.callNative('unsubscribeFromTopic', arguments);\n};\n\nNotifications.presentLocalNotification = function() {\n  return this.callNative('presentLocalNotification', arguments);\n};\n\nNotifications.scheduleLocalNotification = function() {\n  return this.callNative('scheduleLocalNotification', arguments);\n};\n\nNotifications.cancelLocalNotifications = function(userInfo) {\n  console.warn('This method is now deprecated, please use `cancelLocalNotification` (remove the ending `s`).');\n\n  return this.cancelLocalNotification(userInfo);\n};\n\nNotifications.cancelLocalNotification = function(notificationId) {\n  if(typeof notificationId === 'object') {\n    notificationId = notificationId?.id;\n  }\n\n  if(typeof notificationId === 'number') {\n    notificationId = '' + notificationId;\n  }\n\n  if ( Platform.OS === 'ios' ) {\n    return this.callNative('removePendingNotificationRequests', [[notificationId]]);\n  } else {\n    return this.callNative('cancelLocalNotification', [notificationId]);\n  }\n};\n\nNotifications.clearLocalNotification = function() {\n    return this.callNative('clearLocalNotification', arguments);\n};\n\nNotifications.cancelAllLocalNotifications = function() {\n  if ( Platform.OS === 'ios' ) {\n    return this.callNative('removeAllPendingNotificationRequests', arguments);\n  } else if (Platform.OS === 'android') {\n    return this.callNative('cancelAllLocalNotifications', arguments);\n  }\n};\n\nNotifications.setApplicationIconBadgeNumber = function() {\n  return this.callNative('setApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.getApplicationIconBadgeNumber = function() {\n  return this.callNative('getApplicationIconBadgeNumber', arguments);\n};\n\nNotifications.popInitialNotification = function(handler) {\n  this.callNative('getInitialNotification').then((result) => {\n    handler(\n      this._transformNotificationObject(result, true)\n    );\n  });\n};\n\nNotifications.checkPermissions = function() {\n  return this.callNative('checkPermissions', arguments);\n};\n\n/* Abandon Permissions */\nNotifications.abandonPermissions = function() {\n  return this.callNative('abandonPermissions', arguments);\n}\n\nNotifications.clearAllNotifications = function() {\n  // Only available for Android\n  return this.callNative('clearAllNotifications', arguments)\n}\n\nNotifications.removeAllDeliveredNotifications = function() {\n  return this.callNative('removeAllDeliveredNotifications', arguments);\n}\n\nNotifications.getDeliveredNotifications = function() {\n  return this.callNative('getDeliveredNotifications', arguments);\n}\n\nNotifications.getScheduledLocalNotifications = function(callback) {\n\tconst mapNotifications = (notifications) => {\n\t\tlet mappedNotifications = [];\n\t\tif(notifications?.length > 0) {\n\t\t\tif(Platform.OS === 'ios'){\n\t\t\t\tmappedNotifications = notifications.map(notif => {\n\t\t\t\t\treturn ({\n\t\t\t\t\t\tsoundName: notif?.sound,\n\t\t\t\t\t\tid: notif.id,\n                        date: (notif.date ? new Date(notif.date) : null),\n\t\t\t\t\t\tnumber: notif?.badge,\n\t\t\t\t\t\tmessage: notif?.body,\n            title: notif?.title,\n            data: notif?.userInfo\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else if(Platform.OS === 'android') {\n\t\t\t\tmappedNotifications = notifications.map(notif => {\n\n          try {\n            notif.data = JSON.parse(notif.data);\n          } catch(e) { }\n\n\t\t\t\t\treturn ({\n\t\t\t\t\t\tsoundName: notif.soundName,\n\t\t\t\t\t\trepeatInterval: notif.repeatInterval,\n\t\t\t\t\t\tid: notif.id,\n\t\t\t\t\t\tdate: new Date(notif.date),\n\t\t\t\t\t\tnumber: notif.number,\n\t\t\t\t\t\tmessage: notif.message,\n\t\t\t\t\t\ttitle: notif.title,\n\t\t\t\t\t\tdata: notif.data,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tcallback(mappedNotifications);\n\t}\n\n  if(Platform.OS === 'ios'){\n    return this.callNative('getPendingNotificationRequests', [mapNotifications]);\n  } else {\n    return this.callNative('getScheduledLocalNotifications', [mapNotifications]);\n  }\n}\n\nNotifications.removeDeliveredNotifications = function() {\n  return this.callNative('removeDeliveredNotifications', arguments);\n}\n\nNotifications.invokeApp = function() {\n  return this.callNative('invokeApp', arguments);\n};\n\nNotifications.getChannels = function() {\n  return this.callNative('getChannels', arguments);\n};\n\nNotifications.channelExists = function() {\n  return this.callNative('channelExists', arguments);\n};\n\nNotifications.createChannel = function() {\n  return this.callNative('createChannel', arguments);\n};\n\nNotifications.channelBlocked = function() {\n  return this.callNative('channelBlocked', arguments);\n};\n\nNotifications.deleteChannel = function() {\n  return this.callNative('deleteChannel', arguments);\n};\n\nNotifications.setNotificationCategories = function() {\n  return this.callNative('setNotificationCategories', arguments);\n}\n\n// https://developer.android.com/reference/android/app/NotificationManager#IMPORTANCE_DEFAULT\nNotifications.Importance = Object.freeze({\n  DEFAULT: 3,\n  HIGH: 4,\n  LOW: 2,\n  MIN: 1,\n  NONE: 0,\n  UNSPECIFIED: -1000,\n});\n\nmodule.exports = Notifications;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}