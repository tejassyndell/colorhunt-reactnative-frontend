{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nimport View from \"../../../exports/View\";\nimport StyleSheet from \"../../../exports/StyleSheet\";\nimport { VirtualizedListCellContextProvider } from \"./VirtualizedListContext.js\";\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\n\nvar CellRenderer = function (_React$Component) {\n  _inherits(CellRenderer, _React$Component);\n\n  var _super = _createSuper(CellRenderer);\n\n  function CellRenderer() {\n    var _this;\n\n    _classCallCheck(this, CellRenderer);\n\n    _this = _super.apply(this, arguments);\n    _this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: _this.props.item\n      }\n    };\n    _this._separators = {\n      highlight: function highlight() {\n        var _this$props = _this.props,\n            cellKey = _this$props.cellKey,\n            prevCellKey = _this$props.prevCellKey;\n\n        _this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: function unhighlight() {\n        var _this$props2 = _this.props,\n            cellKey = _this$props2.cellKey,\n            prevCellKey = _this$props2.prevCellKey;\n\n        _this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: function updateProps(select, newProps) {\n        var _this$props3 = _this.props,\n            cellKey = _this$props3.cellKey,\n            prevCellKey = _this$props3.prevCellKey;\n\n        _this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n\n    _this._onLayout = function (nativeEvent) {\n      _this.props.onCellLayout && _this.props.onCellLayout(nativeEvent, _this.props.cellKey, _this.props.index);\n    };\n\n    return _this;\n  }\n\n  _createClass(CellRenderer, [{\n    key: \"updateSeparatorProps\",\n    value: function updateSeparatorProps(newProps) {\n      this.setState(function (state) {\n        return {\n          separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n        };\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onUnmount(this.props.cellKey);\n    }\n  }, {\n    key: \"_renderElement\",\n    value: function _renderElement(renderItem, ListItemComponent, item, index) {\n      if (renderItem && ListItemComponent) {\n        console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n      }\n\n      if (ListItemComponent) {\n        return React.createElement(ListItemComponent, {\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      if (renderItem) {\n        return renderItem({\n          item: item,\n          index: index,\n          separators: this._separators\n        });\n      }\n\n      invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          CellRendererComponent = _this$props4.CellRendererComponent,\n          ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n          ListItemComponent = _this$props4.ListItemComponent,\n          cellKey = _this$props4.cellKey,\n          horizontal = _this$props4.horizontal,\n          item = _this$props4.item,\n          index = _this$props4.index,\n          inversionStyle = _this$props4.inversionStyle,\n          onCellFocusCapture = _this$props4.onCellFocusCapture,\n          onCellLayout = _this$props4.onCellLayout,\n          renderItem = _this$props4.renderItem;\n\n      var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n      var itemSeparator = React.isValidElement(ItemSeparatorComponent) ? ItemSeparatorComponent : ItemSeparatorComponent && React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n      var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n      var result = !CellRendererComponent ? React.createElement(View, _extends({\n        style: cellStyle,\n        onFocusCapture: onCellFocusCapture\n      }, onCellLayout && {\n        onLayout: this._onLayout\n      }), element, itemSeparator) : React.createElement(CellRendererComponent, _extends({\n        cellKey: cellKey,\n        index: index,\n        item: item,\n        style: cellStyle,\n        onFocusCapture: onCellFocusCapture\n      }, onCellLayout && {\n        onLayout: this._onLayout\n      }), element, itemSeparator);\n      return React.createElement(VirtualizedListCellContextProvider, {\n        cellKey: this.props.cellKey\n      }, result);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      return {\n        separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n          leadingItem: props.item\n        })\n      };\n    }\n  }]);\n\n  return CellRenderer;\n}(React.Component);\n\nexport { CellRenderer as default };\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  }\n});","map":{"version":3,"names":["_extends","_objectSpread","View","StyleSheet","VirtualizedListCellContextProvider","invariant","React","CellRenderer","arguments","state","separatorProps","highlighted","leadingItem","props","item","_separators","highlight","_this$props","cellKey","prevCellKey","onUpdateSeparators","unhighlight","_this$props2","updateProps","select","newProps","_this$props3","_onLayout","nativeEvent","onCellLayout","index","setState","onUnmount","renderItem","ListItemComponent","console","warn","createElement","separators","_this$props4","CellRendererComponent","ItemSeparatorComponent","horizontal","inversionStyle","onCellFocusCapture","element","_renderElement","itemSeparator","isValidElement","cellStyle","styles","rowReverse","columnReverse","row","result","style","onFocusCapture","onLayout","prevState","Component","create","flexDirection"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/VirtualizedListCellRenderer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport { VirtualizedListCellContextProvider } from './VirtualizedListContext.js';\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nexport default class CellRenderer extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      separatorProps: {\n        highlighted: false,\n        leadingItem: this.props.item\n      }\n    };\n    this._separators = {\n      highlight: () => {\n        var _this$props = this.props,\n          cellKey = _this$props.cellKey,\n          prevCellKey = _this$props.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: true\n        });\n      },\n      unhighlight: () => {\n        var _this$props2 = this.props,\n          cellKey = _this$props2.cellKey,\n          prevCellKey = _this$props2.prevCellKey;\n        this.props.onUpdateSeparators([cellKey, prevCellKey], {\n          highlighted: false\n        });\n      },\n      updateProps: (select, newProps) => {\n        var _this$props3 = this.props,\n          cellKey = _this$props3.cellKey,\n          prevCellKey = _this$props3.prevCellKey;\n        this.props.onUpdateSeparators([select === 'leading' ? prevCellKey : cellKey], newProps);\n      }\n    };\n    this._onLayout = nativeEvent => {\n      this.props.onCellLayout && this.props.onCellLayout(nativeEvent, this.props.cellKey, this.props.index);\n    };\n  }\n  static getDerivedStateFromProps(props, prevState) {\n    return {\n      separatorProps: _objectSpread(_objectSpread({}, prevState.separatorProps), {}, {\n        leadingItem: props.item\n      })\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  // $FlowFixMe[missing-local-annot]\n\n  updateSeparatorProps(newProps) {\n    this.setState(state => ({\n      separatorProps: _objectSpread(_objectSpread({}, state.separatorProps), newProps)\n    }));\n  }\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn('VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' + ' precedence over renderItem.');\n    }\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return /*#__PURE__*/React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators\n      });\n    }\n    invariant(false, 'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.');\n  }\n  render() {\n    var _this$props4 = this.props,\n      CellRendererComponent = _this$props4.CellRendererComponent,\n      ItemSeparatorComponent = _this$props4.ItemSeparatorComponent,\n      ListItemComponent = _this$props4.ListItemComponent,\n      cellKey = _this$props4.cellKey,\n      horizontal = _this$props4.horizontal,\n      item = _this$props4.item,\n      index = _this$props4.index,\n      inversionStyle = _this$props4.inversionStyle,\n      onCellFocusCapture = _this$props4.onCellFocusCapture,\n      onCellLayout = _this$props4.onCellLayout,\n      renderItem = _this$props4.renderItem;\n    var element = this._renderElement(renderItem, ListItemComponent, item, index);\n\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    var itemSeparator = /*#__PURE__*/React.isValidElement(ItemSeparatorComponent) ?\n    // $FlowFixMe[incompatible-type]\n    ItemSeparatorComponent :\n    // $FlowFixMe[incompatible-type]\n    ItemSeparatorComponent && /*#__PURE__*/React.createElement(ItemSeparatorComponent, this.state.separatorProps);\n    var cellStyle = inversionStyle ? horizontal ? [styles.rowReverse, inversionStyle] : [styles.columnReverse, inversionStyle] : horizontal ? [styles.row, inversionStyle] : inversionStyle;\n    var result = !CellRendererComponent ? /*#__PURE__*/React.createElement(View, _extends({\n      style: cellStyle,\n      onFocusCapture: onCellFocusCapture\n    }, onCellLayout && {\n      onLayout: this._onLayout\n    }), element, itemSeparator) : /*#__PURE__*/React.createElement(CellRendererComponent, _extends({\n      cellKey: cellKey,\n      index: index,\n      item: item,\n      style: cellStyle,\n      onFocusCapture: onCellFocusCapture\n    }, onCellLayout && {\n      onLayout: this._onLayout\n    }), element, itemSeparator);\n    return /*#__PURE__*/React.createElement(VirtualizedListCellContextProvider, {\n      cellKey: this.props.cellKey\n    }, result);\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse'\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse'\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}