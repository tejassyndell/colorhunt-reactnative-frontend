{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Filter = function Filter(_ref) {\n  var categoriesData = _ref.categoriesData,\n    selectedCategories = _ref.selectedCategories,\n    setCategories = _ref.setCategories,\n    clearFilters = _ref.clearFilters,\n    applyFilters = _ref.applyFilters;\n  var catagoryHandler = function catagoryHandler(selectedCategory) {\n    if (selectedCategories.includes(selectedCategory)) {\n      setCategories(selectedCategories.filter(function (cat) {\n        return cat !== selectedCategory;\n      }));\n    } else {\n      setCategories([].concat(_toConsumableArray(selectedCategories), [selectedCategory]));\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      width: \"100%\",\n      height: \"auto\",\n      position: \"absolute\",\n      zIndex: 1,\n      background: \"white\",\n      bottom: 0\n    },\n    children: [categoriesData.map(function (category) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return catagoryHandler(category.Category);\n        },\n        children: _jsx(Text, {\n          children: category.Category\n        })\n      }, category.id);\n    }), _jsx(TouchableOpacity, {\n      onPress: clearFilters,\n      children: _jsx(Text, {\n        children: \"Reset\"\n      })\n    }), _jsxs(TouchableOpacity, {\n      onPress: applyFilters,\n      children: [_jsx(Text, {\n        children: \"Apply\"\n      }), _jsx(TextInput, {\n        type: true\n      })]\n    })]\n  });\n};\nexport default Filter;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","TextInput","jsx","_jsx","jsxs","_jsxs","Filter","_ref","categoriesData","selectedCategories","setCategories","clearFilters","applyFilters","catagoryHandler","selectedCategory","includes","filter","cat","concat","_toConsumableArray","style","width","height","position","zIndex","background","bottom","children","map","category","onPress","Category","id","type"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/src/components/Fliter/Filter.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, TouchableOpacity, TextInput  } from \"react-native\";\r\n\r\nconst Filter = ({\r\n  categoriesData,\r\n  selectedCategories,\r\n  setCategories,\r\n  clearFilters,\r\n  applyFilters,\r\n}) => {\r\n  const catagoryHandler = (selectedCategory) => {\r\n    if (selectedCategories.includes(selectedCategory)) {\r\n      setCategories(\r\n        selectedCategories.filter((cat) => cat !== selectedCategory)\r\n      );\r\n    } else {\r\n      setCategories([...selectedCategories, selectedCategory]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{    width: \"100%\",\r\n    height: \"auto\",\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    background: \"white\",\r\n    bottom: 0 }}>\r\n      {categoriesData.map((category) => (\r\n        <TouchableOpacity\r\n          key={category.id}\r\n          onPress={() => catagoryHandler(category.Category)}\r\n        >\r\n          <Text>{category.Category}</Text>\r\n        </TouchableOpacity>\r\n      ))}\r\n\r\n      <TouchableOpacity onPress={clearFilters}>\r\n        <Text>Reset</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={applyFilters}>\r\n        <Text>Apply</Text>\r\n        <TextInput type></TextInput>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAMN;EAAA,IALJC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IACdC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;IAClBC,aAAa,GAAAH,IAAA,CAAbG,aAAa;IACbC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IACZC,YAAY,GAAAL,IAAA,CAAZK,YAAY;EAEZ,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,gBAAgB,EAAK;IAC5C,IAAIL,kBAAkB,CAACM,QAAQ,CAACD,gBAAgB,CAAC,EAAE;MACjDJ,aAAa,CACXD,kBAAkB,CAACO,MAAM,CAAC,UAACC,GAAG;QAAA,OAAKA,GAAG,KAAKH,gBAAgB;MAAA,EAC7D,CAAC;IACH,CAAC,MAAM;MACLJ,aAAa,IAAAQ,MAAA,CAAAC,kBAAA,CAAKV,kBAAkB,IAAEK,gBAAgB,EAAC,CAAC;IAC1D;EACF,CAAC;EAED,OACET,KAAA,CAACP,IAAI;IAACsB,KAAK,EAAE;MAAKC,KAAK,EAAE,MAAM;MAC/BC,MAAM,EAAE,MAAM;MACdC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE,CAAC;MACTC,UAAU,EAAE,OAAO;MACnBC,MAAM,EAAE;IAAE,CAAE;IAAAC,QAAA,GACTnB,cAAc,CAACoB,GAAG,CAAC,UAACC,QAAQ;MAAA,OAC3B1B,IAAA,CAACH,gBAAgB;QAEf8B,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMjB,eAAe,CAACgB,QAAQ,CAACE,QAAQ,CAAC;QAAA,CAAC;QAAAJ,QAAA,EAElDxB,IAAA,CAACJ,IAAI;UAAA4B,QAAA,EAAEE,QAAQ,CAACE;QAAQ,CAAO;MAAC,GAH3BF,QAAQ,CAACG,EAIE,CAAC;IAAA,CACpB,CAAC,EAEF7B,IAAA,CAACH,gBAAgB;MAAC8B,OAAO,EAAEnB,YAAa;MAAAgB,QAAA,EACtCxB,IAAA,CAACJ,IAAI;QAAA4B,QAAA,EAAC;MAAK,CAAM;IAAC,CACF,CAAC,EACnBtB,KAAA,CAACL,gBAAgB;MAAC8B,OAAO,EAAElB,YAAa;MAAAe,QAAA,GACtCxB,IAAA,CAACJ,IAAI;QAAA4B,QAAA,EAAC;MAAK,CAAM,CAAC,EAClBxB,IAAA,CAACF,SAAS;QAACgC,IAAI;MAAA,CAAY,CAAC;IAAA,CACZ,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,eAAe3B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}