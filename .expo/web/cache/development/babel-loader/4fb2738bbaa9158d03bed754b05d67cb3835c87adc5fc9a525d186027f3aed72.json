{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useLayoutEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport React, { useEffect, useState, navigation } from 'react';\nimport MenuBackArrow from \"../../components/menubackarrow/menubackarrow\";\nimport * as Notifications from 'expo-notifications';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Notification(props) {\n  var _ref2, _ref3;\n  var navigation = props.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    token = _useState2[0],\n    setToken = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    title = _useState4[0],\n    setTitle = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    bodydec = _useState6[0],\n    setBodydec = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    notificationData = _useState8[0],\n    setNotificationData = _useState8[1];\n  var data = [{}];\n  useEffect(function () {\n    var _ref;\n    var getToken = function getToken() {\n      return (_ref = _ref || _asyncToGenerator(function* () {\n        try {\n          var _yield$Notifications$ = yield Notifications.requestPermissionsAsync(),\n            status = _yield$Notifications$.status;\n          if (status === 'granted') {\n            var pushToken = (yield Notifications.getExpoPushTokenAsync()).data;\n            console.log('Expo Push Token:', pushToken);\n            setToken(pushToken);\n          } else {\n            console.log('Notification permission denied');\n          }\n        } catch (error) {\n          console.error('Error requesting permission:', error);\n        }\n      })).apply(this, arguments);\n    };\n    getToken();\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(MenuBackArrow, {\n          onPress: function onPress() {\n            navigation.goBack();\n          }\n        });\n      },\n      headerTitle: function headerTitle() {\n        return _jsx(View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\"\n          },\n          children: _jsx(Text, {\n            style: {\n              textAlign: \"center\",\n              fontSize: 25,\n              fontWeight: 700,\n              width: \"100%\"\n            },\n            children: \"Notification\"\n          })\n        });\n      }\n    });\n  }, []);\n  var sendNotification = function sendNotification() {\n    return (_ref2 = _ref2 || _asyncToGenerator(function* () {\n      try {\n        yield fetch('http://10.0.2.2:4000/getNotification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            registrationToken: token,\n            title: title,\n            body: bodydec\n          })\n        });\n        console.log('Notification sent successfully');\n      } catch (error) {\n        console.error('Error sending notification:', error);\n      }\n    })).apply(this, arguments);\n  };\n  var sendAllNotification = function sendAllNotification() {\n    return (_ref3 = _ref3 || _asyncToGenerator(function* () {\n      try {\n        yield fetch('http://10.0.2.2:4000/getNotification', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            registrationToken: token,\n            title: title,\n            body: bodydec\n          })\n        });\n        console.log('Notification sent successfully');\n      } catch (error) {\n        console.error('Error sending notification:', error);\n      }\n    })).apply(this, arguments);\n  };\n  useEffect(function () {\n    var subscription = Notifications.addNotificationReceivedListener(function (notification) {\n      var _notification$request = notification.request.content,\n        title = _notification$request.title,\n        body = _notification$request.body;\n      console.log(title, body);\n      setNotificationData({\n        title: title,\n        body: body\n      });\n      data.push(notificationData);\n      console.log(data);\n      Notifications.presentNotificationAsync({\n        title: title,\n        body: body\n      });\n    });\n    return function () {\n      subscription.remove();\n    };\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [notificationData && _jsxs(View, {\n      style: styles.notificationContainer,\n      children: [_jsx(Text, {\n        style: styles.notificationTitle,\n        children: \"Received Notification:\"\n      }), _jsx(Text, {\n        style: {\n          width: '100%'\n        },\n        children: notificationData.title\n      }), _jsx(Text, {\n        children: notificationData.body\n      })]\n    }), _jsxs(SafeAreaView, {\n      style: {\n        width: '90%'\n      },\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setTitle,\n        placeholder: \"Title\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        onChangeText: setBodydec,\n        placeholder: \"Body\"\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: {\n        backgroundColor: 'gray',\n        padding: 10,\n        borderRadius: 5\n      },\n      onPress: sendNotification,\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Send Notification\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: {\n        backgroundColor: 'gray',\n        padding: 10,\n        marginTop: 20,\n        borderRadius: 5\n      },\n      onPress: sendAllNotification,\n      children: _jsx(Text, {\n        style: {\n          color: 'white'\n        },\n        children: \"Send All Notification\"\n      })\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 40,\n    marginTop: 12,\n    marginBottom: 12,\n    width: '100%',\n    fontSize: 15,\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10\n  },\n  notificationContainer: {\n    marginTop: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 10,\n    width: '96%',\n    marginLeft: '1%',\n    borderColor: 'gray'\n  },\n  notificationTitle: {\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["StatusBar","useLayoutEffect","StyleSheet","Text","View","TouchableOpacity","TextInput","SafeAreaView","React","useEffect","useState","navigation","MenuBackArrow","Notifications","jsx","_jsx","jsxs","_jsxs","Notification","props","_ref2","_ref3","_useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","title","setTitle","_useState5","_useState6","bodydec","setBodydec","_useState7","_useState8","notificationData","setNotificationData","data","_ref","getToken","_asyncToGenerator","_yield$Notifications$","requestPermissionsAsync","status","pushToken","getExpoPushTokenAsync","console","log","error","apply","arguments","setOptions","headerLeft","onPress","goBack","headerTitle","style","display","flexDirection","width","children","textAlign","fontSize","fontWeight","sendNotification","fetch","method","headers","body","JSON","stringify","registrationToken","sendAllNotification","subscription","addNotificationReceivedListener","notification","_notification$request","request","content","push","presentNotificationAsync","remove","styles","container","notificationContainer","notificationTitle","input","onChangeText","placeholder","backgroundColor","padding","borderRadius","color","marginTop","create","flex","alignItems","justifyContent","height","marginBottom","borderWidth","marginLeft","borderColor"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/src/screens/Notification/Notification.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useLayoutEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput, SafeAreaView } from 'react-native';\nimport React, { useEffect, useState,navigation } from 'react';\nimport MenuBackArrow from '../../components/menubackarrow/menubackarrow'\nimport * as Notifications from 'expo-notifications';\n\nexport default function Notification(props) {\n  const { navigation } = props;\n  const [token, setToken] = useState('');\n  const [title, setTitle] = useState('');\n  const [bodydec, setBodydec] = useState('');\n  const [notificationData, setNotificationData] = useState(null);\n\n  const data = [{}]\n\n  useEffect(() => {\n    const getToken = async () => {\n      try {\n        const { status } = await Notifications.requestPermissionsAsync();\n        if (status === 'granted') {\n          const pushToken = (await Notifications.getExpoPushTokenAsync()).data;\n          console.log('Expo Push Token:', pushToken);\n          setToken(pushToken);\n        } else {\n          console.log('Notification permission denied');\n        }\n      } catch (error) {\n        console.error('Error requesting permission:', error);\n      }\n    };\n\n    getToken();\n  }, []);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n        headerLeft: () => (\n            <MenuBackArrow\n                onPress={() => {\n                    navigation.goBack();\n                }}\n            />\n        ),\n        headerTitle: () => (\n            <View style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                width: \"100%\"\n            }}>\n                <Text style={{\n                    textAlign: \"center\",\n                    fontSize: 25, fontWeight: 700, width: \"100%\"\n                }}>Notification</Text>\n            </View>\n        ),\n        \n    });\n}, []);\n\n  const sendNotification = async () => {\n    try {\n      await fetch('http://10.0.2.2:4000/getNotification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          registrationToken: token,\n          title: title,\n          body: bodydec,\n        }),\n      });\n      console.log('Notification sent successfully');\n    } catch (error) {\n      console.error('Error sending notification:', error);\n    }\n  };\n  const sendAllNotification = async () => {\n    try {\n      await fetch('http://10.0.2.2:4000/getNotification', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          registrationToken: token,\n          title: title,\n          body: bodydec,\n        }),\n      });\n      console.log('Notification sent successfully');\n    } catch (error) {\n      console.error('Error sending notification:', error);\n    }\n  };\n\n  useEffect(() => {\n    const subscription = Notifications.addNotificationReceivedListener((notification) => {\n      const { title, body } = notification.request.content;\n      // setNotifucationData([title,body])\nconsole.log(title,body);\n      // Update state with notification data\n      setNotificationData({title, body });\n\n      data.push(notificationData)\n      console.log(data);\n      // Display the notification in the Expo app using Expo's built-in notification UI\n      Notifications.presentNotificationAsync({\n        title: title,\n        body: body,\n      });\n    });\n\n    return () => {\n      subscription.remove();\n    };\n  }, []);\n\n  return (\n    <View style={styles.container}>\n       {notificationData && (\n         <View style={styles.notificationContainer}>\n           <Text style={styles.notificationTitle}>Received Notification:</Text>\n          <Text style={{width:'100%'}}>{notificationData.title}</Text>\n          <Text>{notificationData.body}</Text>\n        </View>\n      )}\n      <SafeAreaView style={{ width: '90%' }}>\n        <TextInput\n          style={styles.input}\n          onChangeText={setTitle}\n          placeholder=\"Title\"\n        />\n        <TextInput\n          style={styles.input}\n          onChangeText={setBodydec}\n          placeholder=\"Body\"\n        />\n      </SafeAreaView>\n     \n      <TouchableOpacity\n        style={{ backgroundColor: 'gray', padding: 10, borderRadius: 5 }}\n        onPress={sendNotification}\n      >\n        <Text style={{ color: 'white' }}>Send Notification</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={{ backgroundColor: 'gray', padding: 10,marginTop:20, borderRadius: 5 }}\n        onPress={sendAllNotification}\n      >\n        <Text style={{ color: 'white' }}>Send All Notification</Text>\n      </TouchableOpacity>\n\n      {/* {/ Render notification data /} */}\n     \n\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    height: 40,\n    marginTop: 12,\n    marginBottom: 12,\n    width: '100%',\n    fontSize: 15,\n    borderWidth: 1,\n    borderRadius: 10,\n    padding: 10,\n  },\n  notificationContainer: {\n    marginTop: 20,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 10,\n    width:'96%',\n    marginLeft:'1%',\n    borderColor: 'gray',\n  },\n  notificationTitle: {\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}