{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"mode\", \"edges\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSafeAreaInsets } from \"./SafeAreaContext\";\nvar TOP = 8,\n    RIGHT = 4,\n    BOTTOM = 2,\n    LEFT = 1,\n    ALL = 15;\nvar edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport var SafeAreaView = React.forwardRef(function (_ref, ref) {\n  var _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      mode = _ref.mode,\n      edges = _ref.edges,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var insets = useSafeAreaInsets();\n  var edgeBitmask = edges != null ? Array.isArray(edges) ? edges.reduce(function (acc, edge) {\n    return acc | edgeBitmaskMap[edge];\n  }, 0) : Object.keys(edges).reduce(function (acc, edge) {\n    return acc | edgeBitmaskMap[edge];\n  }, 0) : ALL;\n  var appliedStyle = React.useMemo(function () {\n    var insetTop = edgeBitmask & TOP ? insets.top : 0;\n    var insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    var insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    var insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    var flatStyle = StyleSheet.flatten(style);\n\n    if (mode === 'margin') {\n      var _flatStyle$margin = flatStyle.margin,\n          margin = _flatStyle$margin === void 0 ? 0 : _flatStyle$margin,\n          _flatStyle$marginVert = flatStyle.marginVertical,\n          marginVertical = _flatStyle$marginVert === void 0 ? margin : _flatStyle$marginVert,\n          _flatStyle$marginHori = flatStyle.marginHorizontal,\n          marginHorizontal = _flatStyle$marginHori === void 0 ? margin : _flatStyle$marginHori,\n          _flatStyle$marginTop = flatStyle.marginTop,\n          marginTop = _flatStyle$marginTop === void 0 ? marginVertical : _flatStyle$marginTop,\n          _flatStyle$marginRigh = flatStyle.marginRight,\n          marginRight = _flatStyle$marginRigh === void 0 ? marginHorizontal : _flatStyle$marginRigh,\n          _flatStyle$marginBott = flatStyle.marginBottom,\n          marginBottom = _flatStyle$marginBott === void 0 ? marginVertical : _flatStyle$marginBott,\n          _flatStyle$marginLeft = flatStyle.marginLeft,\n          marginLeft = _flatStyle$marginLeft === void 0 ? marginHorizontal : _flatStyle$marginLeft;\n      var marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      var _flatStyle$padding = flatStyle.padding,\n          padding = _flatStyle$padding === void 0 ? 0 : _flatStyle$padding,\n          _flatStyle$paddingVer = flatStyle.paddingVertical,\n          paddingVertical = _flatStyle$paddingVer === void 0 ? padding : _flatStyle$paddingVer,\n          _flatStyle$paddingHor = flatStyle.paddingHorizontal,\n          paddingHorizontal = _flatStyle$paddingHor === void 0 ? padding : _flatStyle$paddingHor,\n          _flatStyle$paddingTop = flatStyle.paddingTop,\n          paddingTop = _flatStyle$paddingTop === void 0 ? paddingVertical : _flatStyle$paddingTop,\n          _flatStyle$paddingRig = flatStyle.paddingRight,\n          paddingRight = _flatStyle$paddingRig === void 0 ? paddingHorizontal : _flatStyle$paddingRig,\n          _flatStyle$paddingBot = flatStyle.paddingBottom,\n          paddingBottom = _flatStyle$paddingBot === void 0 ? paddingVertical : _flatStyle$paddingBot,\n          _flatStyle$paddingLef = flatStyle.paddingLeft,\n          paddingLeft = _flatStyle$paddingLef === void 0 ? paddingHorizontal : _flatStyle$paddingLef;\n      var paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest, {\n    ref: ref\n  }));\n});","map":{"version":3,"sources":["SafeAreaView.web.tsx"],"names":["React","useSafeAreaInsets","TOP","RIGHT","BOTTOM","LEFT","ALL","edgeBitmaskMap","top","right","bottom","left","SafeAreaView","forwardRef","style","mode","edges","rest","ref","insets","edgeBitmask","Array","isArray","reduce","acc","edge","Object","keys","appliedStyle","useMemo","insetTop","insetRight","insetBottom","insetLeft","flatStyle","StyleSheet","flatten","margin","marginVertical","marginHorizontal","marginTop","marginRight","marginBottom","marginLeft","marginStyle","padding","paddingVertical","paddingHorizontal","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingStyle","View"],"mappings":"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","sourceRoot":"../../src","sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { useSafeAreaInsets } from './SafeAreaContext';\n// prettier-ignore\nconst TOP = 0b1000,\n  RIGHT = 0b0100,\n  BOTTOM = 0b0010,\n  LEFT = 0b0001,\n  ALL = 0b1111;\n\n/* eslint-disable no-bitwise */\n\nconst edgeBitmaskMap = {\n  top: TOP,\n  right: RIGHT,\n  bottom: BOTTOM,\n  left: LEFT\n};\nexport const SafeAreaView = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    style = {},\n    mode,\n    edges,\n    ...rest\n  } = _ref;\n  const insets = useSafeAreaInsets();\n  const edgeBitmask = edges != null ? Array.isArray(edges) ? edges.reduce((acc, edge) => acc | edgeBitmaskMap[edge], 0) : Object.keys(edges).reduce((acc, edge) => acc | edgeBitmaskMap[edge], 0) : ALL;\n  const appliedStyle = React.useMemo(() => {\n    const insetTop = edgeBitmask & TOP ? insets.top : 0;\n    const insetRight = edgeBitmask & RIGHT ? insets.right : 0;\n    const insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0;\n    const insetLeft = edgeBitmask & LEFT ? insets.left : 0;\n    const flatStyle = StyleSheet.flatten(style);\n    if (mode === 'margin') {\n      const {\n        margin = 0,\n        marginVertical = margin,\n        marginHorizontal = margin,\n        marginTop = marginVertical,\n        marginRight = marginHorizontal,\n        marginBottom = marginVertical,\n        marginLeft = marginHorizontal\n      } = flatStyle;\n      const marginStyle = {\n        marginTop: marginTop + insetTop,\n        marginRight: marginRight + insetRight,\n        marginBottom: marginBottom + insetBottom,\n        marginLeft: marginLeft + insetLeft\n      };\n      return [style, marginStyle];\n    } else {\n      const {\n        padding = 0,\n        paddingVertical = padding,\n        paddingHorizontal = padding,\n        paddingTop = paddingVertical,\n        paddingRight = paddingHorizontal,\n        paddingBottom = paddingVertical,\n        paddingLeft = paddingHorizontal\n      } = flatStyle;\n      const paddingStyle = {\n        paddingTop: paddingTop + insetTop,\n        paddingRight: paddingRight + insetRight,\n        paddingBottom: paddingBottom + insetBottom,\n        paddingLeft: paddingLeft + insetLeft\n      };\n      return [style, paddingStyle];\n    }\n  }, [style, insets, mode, edgeBitmask]);\n  return /*#__PURE__*/React.createElement(View, _extends({\n    style: appliedStyle\n  }, rest, {\n    ref: ref\n  }));\n});\n//# sourceMappingURL=SafeAreaView.web.js.map"]},"metadata":{},"sourceType":"module"}