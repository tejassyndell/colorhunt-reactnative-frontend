{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\", \"strictMode\"];\nimport View from \"../../../exports/View\";\nimport StyleSheet from \"../../../exports/StyleSheet\";\nimport deepDiffer from \"../deepDiffer\";\nimport Platform from \"../../../exports/Platform\";\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nimport VirtualizedList from \"../VirtualizedList\";\nimport { keyExtractor as defaultKeyExtractor } from \"../VirtualizeUtils\";\nimport memoizeOne from 'memoize-one';\n\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n}\n\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\n\nfunction isArrayLike(data) {\n  return typeof Object(data).length === 'number';\n}\n\nvar FlatList = function (_React$PureComponent) {\n  _inherits(FlatList, _React$PureComponent);\n\n  var _super = _createSuper(FlatList);\n\n  function FlatList(_props) {\n    var _this;\n\n    _classCallCheck(this, FlatList);\n\n    _this = _super.call(this, _props);\n    _this._virtualizedListPairs = [];\n\n    _this._captureRef = function (ref) {\n      _this._listRef = ref;\n    };\n\n    _this._getItem = function (data, index) {\n      var numColumns = numColumnsOrDefault(_this.props.numColumns);\n\n      if (numColumns > 1) {\n        var ret = [];\n\n        for (var kk = 0; kk < numColumns; kk++) {\n          var itemIndex = index * numColumns + kk;\n\n          if (itemIndex < data.length) {\n            var _item = data[itemIndex];\n            ret.push(_item);\n          }\n        }\n\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n\n    _this._getItemCount = function (data) {\n      if (data != null && isArrayLike(data)) {\n        var numColumns = numColumnsOrDefault(_this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n\n    _this._keyExtractor = function (items, index) {\n      var _this$props$keyExtrac;\n\n      var numColumns = numColumnsOrDefault(_this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = _this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n\n      if (numColumns > 1) {\n        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        return items.map(function (item, kk) {\n          return keyExtractor(item, index * numColumns + kk);\n        }).join(':');\n      }\n\n      return keyExtractor(items, index);\n    };\n\n    _this._renderer = function (ListItemComponent, renderItem, columnWrapperStyle, numColumns, extraData) {\n      var cols = numColumnsOrDefault(numColumns);\n\n      var render = function render(props) {\n        if (ListItemComponent) {\n          return React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n\n      var renderProp = function renderProp(info) {\n        if (cols > 1) {\n          var _item2 = info.item,\n              _index = info.index;\n          invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n          return React.createElement(View, {\n            style: [styles.row, columnWrapperStyle]\n          }, _item2.map(function (it, kk) {\n            var element = render({\n              item: it,\n              index: _index * cols + kk,\n              separators: info.separators\n            });\n            return element != null ? React.createElement(React.Fragment, {\n              key: kk\n            }, element) : null;\n          }));\n        } else {\n          return render(info);\n        }\n      };\n\n      return ListItemComponent ? {\n        ListItemComponent: renderProp\n      } : {\n        renderItem: renderProp\n      };\n    };\n\n    _this._memoizedRenderer = memoizeOne(_this._renderer);\n\n    _this._checkProps(_this.props);\n\n    if (_this.props.viewabilityConfigCallbackPairs) {\n      _this._virtualizedListPairs = _this.props.viewabilityConfigCallbackPairs.map(function (pair) {\n        return {\n          viewabilityConfig: pair.viewabilityConfig,\n          onViewableItemsChanged: _this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n        };\n      });\n    } else if (_this.props.onViewableItemsChanged) {\n      _this._virtualizedListPairs.push({\n        viewabilityConfig: _this.props.viewabilityConfig,\n        onViewableItemsChanged: _this._createOnViewableItemsChanged(_this.props.onViewableItemsChanged)\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(FlatList, [{\n    key: \"scrollToEnd\",\n    value: function scrollToEnd(params) {\n      if (this._listRef) {\n        this._listRef.scrollToEnd(params);\n      }\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(params) {\n      if (this._listRef) {\n        this._listRef.scrollToIndex(params);\n      }\n    }\n  }, {\n    key: \"scrollToItem\",\n    value: function scrollToItem(params) {\n      if (this._listRef) {\n        this._listRef.scrollToItem(params);\n      }\n    }\n  }, {\n    key: \"scrollToOffset\",\n    value: function scrollToOffset(params) {\n      if (this._listRef) {\n        this._listRef.scrollToOffset(params);\n      }\n    }\n  }, {\n    key: \"recordInteraction\",\n    value: function recordInteraction() {\n      if (this._listRef) {\n        this._listRef.recordInteraction();\n      }\n    }\n  }, {\n    key: \"flashScrollIndicators\",\n    value: function flashScrollIndicators() {\n      if (this._listRef) {\n        this._listRef.flashScrollIndicators();\n      }\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      if (this._listRef) {\n        return this._listRef.getScrollResponder();\n      }\n    }\n  }, {\n    key: \"getNativeScrollRef\",\n    value: function getNativeScrollRef() {\n      if (this._listRef) {\n        return this._listRef.getScrollRef();\n      }\n    }\n  }, {\n    key: \"getScrollableNode\",\n    value: function getScrollableNode() {\n      if (this._listRef) {\n        return this._listRef.getScrollableNode();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n      invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n      invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n      invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n\n      this._checkProps(this.props);\n    }\n  }, {\n    key: \"_checkProps\",\n    value: function _checkProps(props) {\n      var getItem = props.getItem,\n          getItemCount = props.getItemCount,\n          horizontal = props.horizontal,\n          columnWrapperStyle = props.columnWrapperStyle,\n          onViewableItemsChanged = props.onViewableItemsChanged,\n          viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n\n      if (numColumns > 1) {\n        invariant(!horizontal, 'numColumns does not support horizontal.');\n      } else {\n        invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n      }\n\n      invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n    }\n  }, {\n    key: \"_pushMultiColumnViewable\",\n    value: function _pushMultiColumnViewable(arr, v) {\n      var _this$props$keyExtrac2;\n\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n      v.item.forEach(function (item, ii) {\n        invariant(v.index != null, 'Missing index!');\n        var index = v.index * numColumns + ii;\n        arr.push(_objectSpread(_objectSpread({}, v), {}, {\n          item: item,\n          key: keyExtractor(item, index),\n          index: index\n        }));\n      });\n    }\n  }, {\n    key: \"_createOnViewableItemsChanged\",\n    value: function _createOnViewableItemsChanged(onViewableItemsChanged) {\n      var _this2 = this;\n\n      return function (info) {\n        var numColumns = numColumnsOrDefault(_this2.props.numColumns);\n\n        if (onViewableItemsChanged) {\n          if (numColumns > 1) {\n            var changed = [];\n            var viewableItems = [];\n            info.viewableItems.forEach(function (v) {\n              return _this2._pushMultiColumnViewable(viewableItems, v);\n            });\n            info.changed.forEach(function (v) {\n              return _this2._pushMultiColumnViewable(changed, v);\n            });\n            onViewableItemsChanged({\n              viewableItems: viewableItems,\n              changed: changed\n            });\n          } else {\n            onViewableItemsChanged(info);\n          }\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numColumns = _this$props.numColumns,\n          columnWrapperStyle = _this$props.columnWrapperStyle,\n          _removeClippedSubviews = _this$props.removeClippedSubviews,\n          _this$props$strictMod = _this$props.strictMode,\n          strictMode = _this$props$strictMod === void 0 ? false : _this$props$strictMod,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      var renderer = strictMode ? this._memoizedRenderer : this._renderer;\n      return React.createElement(VirtualizedList, _extends({}, restProps, {\n        getItem: this._getItem,\n        getItemCount: this._getItemCount,\n        keyExtractor: this._keyExtractor,\n        ref: this._captureRef,\n        viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n        removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n      }, renderer(this.props.ListItemComponent, this.props.renderItem, columnWrapperStyle, numColumns, this.props.extraData)));\n    }\n  }]);\n\n  return FlatList;\n}(React.PureComponent);\n\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_objectSpread","_excluded","View","StyleSheet","deepDiffer","Platform","invariant","React","VirtualizedList","keyExtractor","defaultKeyExtractor","memoizeOne","removeClippedSubviewsOrDefault","removeClippedSubviews","OS","numColumnsOrDefault","numColumns","isArrayLike","data","Object","length","FlatList","_props","_virtualizedListPairs","_captureRef","ref","_listRef","_getItem","index","props","ret","kk","itemIndex","_item","push","_getItemCount","Math","ceil","_keyExtractor","items","_this$props$keyExtrac","Array","isArray","map","item","join","_renderer","ListItemComponent","renderItem","columnWrapperStyle","extraData","cols","render","createElement","renderProp","info","_item2","_index","style","styles","row","it","element","separators","Fragment","key","_memoizedRenderer","_checkProps","viewabilityConfigCallbackPairs","pair","viewabilityConfig","onViewableItemsChanged","_createOnViewableItemsChanged","params","scrollToEnd","scrollToIndex","scrollToItem","scrollToOffset","recordInteraction","flashScrollIndicators","getScrollResponder","getScrollRef","getScrollableNode","prevProps","getItem","getItemCount","horizontal","arr","v","_this$props$keyExtrac2","forEach","ii","changed","viewableItems","_pushMultiColumnViewable","_this$props","_removeClippedSubviews","_this$props$strictMod","strictMode","restProps","renderer","PureComponent","create","flexDirection"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/node_modules/react-native-web/dist/vendor/react-native/FlatList/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread2\";\nvar _excluded = [\"numColumns\", \"columnWrapperStyle\", \"removeClippedSubviews\", \"strictMode\"];\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport View from '../../../exports/View';\nimport StyleSheet from '../../../exports/StyleSheet';\nimport deepDiffer from '../deepDiffer';\nimport Platform from '../../../exports/Platform';\nimport invariant from 'fbjs/lib/invariant';\nimport * as React from 'react';\nimport VirtualizedList from '../VirtualizedList';\nimport { keyExtractor as defaultKeyExtractor } from '../VirtualizeUtils';\nimport memoizeOne from 'memoize-one';\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews) {\n  return removeClippedSubviews !== null && removeClippedSubviews !== void 0 ? removeClippedSubviews : Platform.OS === 'android';\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns) {\n  return numColumns !== null && numColumns !== void 0 ? numColumns : 1;\n}\nfunction isArrayLike(data) {\n  // $FlowExpectedError[incompatible-use]\n  return typeof Object(data).length === 'number';\n}\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList extends React.PureComponent {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder() {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef() {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n  getScrollableNode() {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n  constructor(_props) {\n    super(_props);\n    this._virtualizedListPairs = [];\n    this._captureRef = ref => {\n      this._listRef = ref;\n    };\n    this._getItem = (data, index) => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (numColumns > 1) {\n        var ret = [];\n        for (var kk = 0; kk < numColumns; kk++) {\n          var itemIndex = index * numColumns + kk;\n          if (itemIndex < data.length) {\n            var _item = data[itemIndex];\n            ret.push(_item);\n          }\n        }\n        return ret;\n      } else {\n        return data[index];\n      }\n    };\n    this._getItemCount = data => {\n      // Legacy behavior of FlatList was to forward \"undefined\" length if invalid\n      // data like a non-arraylike object is passed. VirtualizedList would then\n      // coerce this, and the math would work out to no-op. For compatibility, if\n      // invalid data is passed, we tell VirtualizedList there are zero items\n      // available to prevent it from trying to read from the invalid data\n      // (without propagating invalidly typed data).\n      if (data != null && isArrayLike(data)) {\n        var numColumns = numColumnsOrDefault(this.props.numColumns);\n        return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n      } else {\n        return 0;\n      }\n    };\n    this._keyExtractor = (items, index) => {\n      var _this$props$keyExtrac;\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      var keyExtractor = (_this$props$keyExtrac = this.props.keyExtractor) !== null && _this$props$keyExtrac !== void 0 ? _this$props$keyExtrac : defaultKeyExtractor;\n      if (numColumns > 1) {\n        invariant(Array.isArray(items), 'FlatList: Encountered internal consistency error, expected each item to consist of an ' + 'array with 1-%s columns; instead, received a single item.', numColumns);\n        return items.map((item, kk) => keyExtractor(item, index * numColumns + kk)).join(':');\n      }\n\n      // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n      return keyExtractor(items, index);\n    };\n    this._renderer = (ListItemComponent, renderItem, columnWrapperStyle, numColumns, extraData\n    // $FlowFixMe[missing-local-annot]\n    ) => {\n      var cols = numColumnsOrDefault(numColumns);\n      var render = props => {\n        if (ListItemComponent) {\n          // $FlowFixMe[not-a-component] Component isn't valid\n          // $FlowFixMe[incompatible-type-arg] Component isn't valid\n          // $FlowFixMe[incompatible-return] Component isn't valid\n          return /*#__PURE__*/React.createElement(ListItemComponent, props);\n        } else if (renderItem) {\n          // $FlowFixMe[incompatible-call]\n          return renderItem(props);\n        } else {\n          return null;\n        }\n      };\n      var renderProp = info => {\n        if (cols > 1) {\n          var _item2 = info.item,\n            _index = info.index;\n          invariant(Array.isArray(_item2), 'Expected array of items with numColumns > 1');\n          return /*#__PURE__*/React.createElement(View, {\n            style: [styles.row, columnWrapperStyle]\n          }, _item2.map((it, kk) => {\n            var element = render({\n              // $FlowFixMe[incompatible-call]\n              item: it,\n              index: _index * cols + kk,\n              separators: info.separators\n            });\n            return element != null ? /*#__PURE__*/React.createElement(React.Fragment, {\n              key: kk\n            }, element) : null;\n          }));\n        } else {\n          return render(info);\n        }\n      };\n      return ListItemComponent ? {\n        ListItemComponent: renderProp\n      } : {\n        renderItem: renderProp\n      };\n    };\n    this._memoizedRenderer = memoizeOne(this._renderer);\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs = this.props.viewabilityConfigCallbackPairs.map(pair => ({\n        viewabilityConfig: pair.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(pair.onViewableItemsChanged)\n      }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(this.props.onViewableItemsChanged)\n      });\n    }\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  componentDidUpdate(prevProps) {\n    invariant(prevProps.numColumns === this.props.numColumns, 'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' + 'changing the number of columns to force a fresh render of the component.');\n    invariant(prevProps.onViewableItemsChanged === this.props.onViewableItemsChanged, 'Changing onViewableItemsChanged on the fly is not supported');\n    invariant(!deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig), 'Changing viewabilityConfig on the fly is not supported');\n    invariant(prevProps.viewabilityConfigCallbackPairs === this.props.viewabilityConfigCallbackPairs, 'Changing viewabilityConfigCallbackPairs on the fly is not supported');\n    this._checkProps(this.props);\n  }\n  // $FlowFixMe[missing-local-annot]\n  _checkProps(props) {\n    var getItem = props.getItem,\n      getItemCount = props.getItemCount,\n      horizontal = props.horizontal,\n      columnWrapperStyle = props.columnWrapperStyle,\n      onViewableItemsChanged = props.onViewableItemsChanged,\n      viewabilityConfigCallbackPairs = props.viewabilityConfigCallbackPairs;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(!getItem && !getItemCount, 'FlatList does not support custom data formats.');\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(!columnWrapperStyle, 'columnWrapperStyle not supported for single column lists');\n    }\n    invariant(!(onViewableItemsChanged && viewabilityConfigCallbackPairs), 'FlatList does not support setting both onViewableItemsChanged and ' + 'viewabilityConfigCallbackPairs.');\n  }\n  _pushMultiColumnViewable(arr, v) {\n    var _this$props$keyExtrac2;\n    var numColumns = numColumnsOrDefault(this.props.numColumns);\n    var keyExtractor = (_this$props$keyExtrac2 = this.props.keyExtractor) !== null && _this$props$keyExtrac2 !== void 0 ? _this$props$keyExtrac2 : defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      var index = v.index * numColumns + ii;\n      arr.push(_objectSpread(_objectSpread({}, v), {}, {\n        item,\n        key: keyExtractor(item, index),\n        index\n      }));\n    });\n  }\n  _createOnViewableItemsChanged(onViewableItemsChanged\n  // $FlowFixMe[missing-local-annot]\n  ) {\n    return info => {\n      var numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          var changed = [];\n          var viewableItems = [];\n          info.viewableItems.forEach(v => this._pushMultiColumnViewable(viewableItems, v));\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({\n            viewableItems,\n            changed\n          });\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n  render() {\n    var _this$props = this.props,\n      numColumns = _this$props.numColumns,\n      columnWrapperStyle = _this$props.columnWrapperStyle,\n      _removeClippedSubviews = _this$props.removeClippedSubviews,\n      _this$props$strictMod = _this$props.strictMode,\n      strictMode = _this$props$strictMod === void 0 ? false : _this$props$strictMod,\n      restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    var renderer = strictMode ? this._memoizedRenderer : this._renderer;\n    return (\n      /*#__PURE__*/\n      // $FlowFixMe[incompatible-exact] - `restProps` (`Props`) is inexact.\n      React.createElement(VirtualizedList, _extends({}, restProps, {\n        getItem: this._getItem,\n        getItemCount: this._getItemCount,\n        keyExtractor: this._keyExtractor,\n        ref: this._captureRef,\n        viewabilityConfigCallbackPairs: this._virtualizedListPairs,\n        removeClippedSubviews: removeClippedSubviewsOrDefault(_removeClippedSubviews)\n      }, renderer(this.props.ListItemComponent, this.props.renderItem, columnWrapperStyle, numColumns, this.props.extraData)))\n    );\n  }\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row'\n  }\n});\nexport default FlatList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}