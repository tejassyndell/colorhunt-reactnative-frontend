{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, navigation } from 'react';\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useLayoutEffect } from 'react';\nimport MenuBackArrow from \"../../components/menubackarrow/menubackarrow\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Contact(props) {\n  var navigation = props.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    subject = _useState6[0],\n    setSubject = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    message = _useState8[0],\n    setMessage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showValidationErrors = _useState10[0],\n    setShowValidationErrors = _useState10[1];\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setShowValidationErrors(true);\n      if (!userName || !email || !subject || !message) {\n        Alert.alert('Validation Error.', 'Please fill in all fields before submitting.', [{\n          text: 'OK',\n          onPress: function onPress() {\n            return console.log('Alert Dismissed');\n          }\n        }]);\n        return;\n      }\n      Alert.alert('Success', 'Thank you! We will contact you soon.', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('Alert dismissed');\n        }\n      }]);\n      setUserName('');\n      setEmail('');\n      setSubject('');\n      setMessage('');\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(MenuBackArrow, {\n          onPress: function onPress() {\n            navigation.navigate('Home');\n          }\n        });\n      },\n      headerTitle: function headerTitle() {\n        return _jsx(View, {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\"\n          },\n          children: _jsx(Text, {\n            style: {\n              textAlign: \"center\",\n              fontSize: 25,\n              fontWeight: 700,\n              width: \"100%\"\n            },\n            children: \"Contact Us\"\n          })\n        });\n      }\n    });\n  }, []);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'white'\n    },\n    children: [_jsx(TouchableOpacity, {\n      children: _jsx(View, {\n        children: _jsx(Image, {\n          source: require(\"../../../assets/ContactPagePNG/contact.png\")\n        })\n      })\n    }), _jsx(View, {\n      children: _jsxs(View, {\n        children: [_jsx(TextInput, {\n          placeholder: \"Name\",\n          value: userName,\n          onChangeText: setUserName,\n          style: {\n            borderWidth: 1,\n            padding: 10,\n            margin: 5,\n            width: 300\n          }\n        }), showValidationErrors && userName === '' && _jsx(Text, {\n          style: {\n            color: 'red'\n          },\n          children: \"This Field is Required\"\n        }), _jsx(TextInput, {\n          placeholder: \"Email\",\n          value: email,\n          onChangeText: setEmail,\n          style: {\n            borderWidth: 1,\n            padding: 10,\n            margin: 5,\n            width: 300\n          }\n        }), showValidationErrors && email === '' && _jsx(Text, {\n          style: {\n            color: 'red'\n          },\n          children: \"This field is Required\"\n        }), _jsx(TextInput, {\n          placeholder: \"Subject\",\n          value: subject,\n          onChangeText: setSubject,\n          style: {\n            borderWidth: 1,\n            padding: 10,\n            margin: 5,\n            width: 300\n          }\n        }), showValidationErrors && subject === '' && _jsx(Text, {\n          style: {\n            color: 'red'\n          },\n          children: \"This Field is Required\"\n        }), _jsx(TextInput, {\n          placeholder: \"Message\",\n          value: message,\n          onChangeText: setMessage,\n          multiline: true,\n          style: {\n            borderWidth: 1,\n            padding: 10,\n            margin: 5,\n            width: 300,\n            height: 100\n          }\n        }), showValidationErrors && message === '' && _jsx(Text, {\n          style: {\n            color: 'red'\n          },\n          children: \"This Field is Required\"\n        }), _jsx(TouchableOpacity, {\n          style: {\n            backgroundColor: 'black',\n            padding: 10,\n            borderRadius: 5,\n            margin: 5,\n            marginTop: 30\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              textAlign: 'center'\n            },\n            onPress: handleSubmit,\n            children: \"Submit\"\n          })\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["useState","navigation","React","Text","View","TouchableOpacity","TextInput","Image","Alert","useLayoutEffect","MenuBackArrow","jsx","_jsx","jsxs","_jsxs","Contact","props","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","email","setEmail","_useState5","_useState6","subject","setSubject","_useState7","_useState8","message","setMessage","_useState9","_useState10","showValidationErrors","setShowValidationErrors","handleSubmit","_ref","_asyncToGenerator","alert","text","onPress","console","log","apply","arguments","setOptions","headerLeft","navigate","headerTitle","style","display","flexDirection","width","children","textAlign","fontSize","fontWeight","flex","justifyContent","alignItems","backgroundColor","source","require","placeholder","value","onChangeText","borderWidth","padding","margin","color","multiline","height","borderRadius","marginTop"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/src/screens/Contact-Us/Contact.js"],"sourcesContent":["import { useState, navigation } from 'react';\r\nimport React from 'react'\r\nimport { Text, View, TouchableOpacity, TextInput, Image, Alert } from 'react-native'\r\nimport { useLayoutEffect } from 'react';\r\nimport MenuBackArrow from '../../components/menubackarrow/menubackarrow'\r\n\r\nexport default function Contact(props) {\r\n    const  {navigation} = props;\r\n    const [userName, setUserName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [showValidationErrors, setShowValidationErrors] = useState(false);\r\n    const handleSubmit = async () => {\r\n        // Perform your API call or action here\r\n        // For simplicity, I'm showing an alert instead of actual API calls\r\n        setShowValidationErrors(true)\r\n        if (!userName || !email || !subject || !message) {\r\n            Alert.alert('Validation Error.', 'Please fill in all fields before submitting.', [{ text: 'OK', onPress: () => console.log('Alert Dismissed') }]\r\n            )\r\n            return;\r\n        }\r\n        Alert.alert(\r\n            'Success',\r\n            'Thank you! We will contact you soon.',\r\n            [{ text: 'OK', onPress: () => console.log('Alert dismissed') }]\r\n        );\r\n\r\n        // Clear input fields after submission\r\n        setUserName('');\r\n        setEmail('');\r\n        setSubject('');\r\n        setMessage('');\r\n    };\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerLeft: () => (\r\n                <MenuBackArrow\r\n                    onPress={() => {\r\n                        navigation.navigate('Home');\r\n                    }}\r\n                />\r\n            ),\r\n            headerTitle: () => (\r\n                <View style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    width: \"100%\"\r\n                }}>\r\n                    <Text style={{\r\n                        textAlign: \"center\",\r\n                        fontSize: 25, fontWeight: 700, width: \"100%\"\r\n                    }}>Contact Us</Text>\r\n                </View>\r\n            ),\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor:'white' }}>\r\n            <TouchableOpacity>\r\n                <View >\r\n                    <Image source={require('../../../assets/ContactPagePNG/contact.png')} />\r\n                </View>\r\n            </TouchableOpacity>\r\n            <View >\r\n                <View>\r\n                    <TextInput\r\n                        placeholder=\"Name\"\r\n                        value={userName}\r\n                        onChangeText={setUserName}\r\n                        style={{ borderWidth: 1, padding: 10, margin: 5, width: 300 }}\r\n                    />\r\n                    {showValidationErrors && userName === '' && <Text style={{color:'red'}}>This Field is Required</Text>}\r\n                    <TextInput\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChangeText={setEmail}\r\n                        style={{ borderWidth: 1, padding: 10, margin: 5, width: 300 }}\r\n                    />\r\n                    {showValidationErrors && email === '' && <Text style={{color:'red'}}>This field is Required</Text>}\r\n                    <TextInput\r\n                        placeholder=\"Subject\"\r\n                        value={subject}\r\n                        onChangeText={setSubject}\r\n                        style={{ borderWidth: 1, padding: 10, margin: 5, width: 300 }}\r\n                    />\r\n                    {showValidationErrors && subject === '' && <Text style={{color:'red'}}>This Field is Required</Text>}\r\n                    <TextInput\r\n                        placeholder=\"Message\"\r\n                        value={message}\r\n                        onChangeText={setMessage}\r\n                        multiline\r\n                        style={{ borderWidth: 1, padding: 10, margin: 5, width: 300, height: 100 }}\r\n                    />\r\n                    {showValidationErrors && message === '' && <Text style={{color:'red'}}>This Field is Required</Text>}\r\n                    <TouchableOpacity style={{ backgroundColor: 'black', padding: 10, borderRadius: 5, margin: 5, marginTop: 30 }}>\r\n                        <Text style={{ color: 'white', textAlign: 'center' }} onPress={handleSubmit}>Submit</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}