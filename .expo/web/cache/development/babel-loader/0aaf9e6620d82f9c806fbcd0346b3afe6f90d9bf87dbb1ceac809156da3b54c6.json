{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport styles from \"./style2\";\nimport { Profiledata } from \"../../api/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Userprofile() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    Profile = _useState2[0],\n    setprofile = _useState2[1];\n  useEffect(function () {\n    fetchprofiledata();\n  }, []);\n  var fetchprofiledata = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var data = {\n          party_id: 197\n        };\n        var response = yield Profiledata(data);\n        setprofile(response.data);\n      } catch (err) {\n        console.log(err, 'error in fetching data');\n      }\n    });\n    return function fetchprofiledata() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  console.log(Profile);\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: styles.TopContainer,\n      children: [_jsx(TouchableHighlight, {\n        children: _jsx(View, {\n          style: styles.Button,\n          children: _jsx(Image, {\n            source: require(\"../../../assets/Backbutton/menu_bar.jpg\")\n          })\n        })\n      }), _jsx(TouchableHighlight, {\n        children: _jsx(View, {\n          style: styles.Profile,\n          children: _jsx(Image, {\n            source: require(\"../../../assets/Profileicon/Frame_1171274903.png\")\n          })\n        })\n      })]\n    }), Profile.map(function (item) {\n      return _jsxs(View, {\n        style: styles.BottomContainer,\n        children: [_jsx(View, {\n          style: styles.hello,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: item.Name\n          })\n        }), _jsx(View, {\n          style: styles.hello,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: item.Address\n          })\n        }), _jsx(View, {\n          style: styles.hello,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: item.PhoneNumber\n          })\n        }), _jsxs(View, {\n          style: styles.hello2,\n          children: [_jsx(View, {\n            style: styles.abc,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: item.City\n            })\n          }), _jsx(View, {\n            style: styles.abc,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: item.State\n            })\n          })]\n        }), _jsxs(View, {\n          style: styles.hello2,\n          children: [_jsx(View, {\n            style: styles.abc,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: item.Country\n            })\n          }), _jsx(View, {\n            style: styles.abc,\n            children: _jsx(Text, {\n              style: styles.text,\n              children: item.PinCode\n            })\n          })]\n        })]\n      }, item.Id);\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","Text","View","Image","TouchableHighlight","styles","Profiledata","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Userprofile","_useState","_useState2","_slicedToArray","Profile","setprofile","fetchprofiledata","_ref","_asyncToGenerator","data","party_id","response","err","console","log","apply","arguments","children","style","TopContainer","Button","source","require","map","item","BottomContainer","hello","text","Name","Address","PhoneNumber","hello2","abc","City","State","Country","PinCode","Id"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/src/screens/UserProfile/Userprofile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Text, View, Image, TouchableHighlight } from 'react-native'\r\nimport styles from './style2'\r\nimport { Profiledata } from '../../api/api'\r\nexport default function Userprofile() {\r\n\r\n    const [Profile, setprofile] = useState([])\r\n    useEffect(()=>{\r\n        fetchprofiledata()\r\n    },[])\r\n    const fetchprofiledata = async () => {\r\n        try{\r\n            const data = { party_id: 197}\r\n            const response = await Profiledata(data);\r\n            setprofile(response.data)\r\n        } catch(err) {\r\n            console.log(err,'error in fetching data')\r\n        }\r\n    }\r\n    console.log(Profile)\r\n    return (\r\n        <>\r\n            <View style={styles.TopContainer}>\r\n                <TouchableHighlight>\r\n                <View style={styles.Button}>\r\n                    <Image source={require('../../../assets/Backbutton/menu_bar.jpg')} />\r\n                </View>\r\n                \r\n                </TouchableHighlight>\r\n                <TouchableHighlight>\r\n                <View style={styles.Profile}>\r\n                <Image source={require('../../../assets/Profileicon/Frame_1171274903.png')}/>\r\n                </View>\r\n                </TouchableHighlight>\r\n            </View>\r\n            {Profile.map((item)=>(\r\n                <View style={styles.BottomContainer} key={item.Id}>\r\n                <View style={styles.hello}>\r\n                    <Text style={styles.text} >{item.Name}</Text>\r\n                </View>\r\n                <View style={styles.hello}>\r\n                    <Text style={styles.text} >{item.Address}</Text>\r\n                </View>\r\n                <View style={styles.hello}>\r\n                    <Text style={styles.text} >{item.PhoneNumber}</Text>\r\n                </View>\r\n                <View style={styles.hello2}>\r\n                    <View style={styles.abc}><Text style={styles.text}>{item.City}</Text></View>\r\n                    <View style={styles.abc}><Text style={styles.text}>{item.State}</Text></View>\r\n                </View>\r\n                <View style={styles.hello2}>\r\n                    <View style={styles.abc}><Text style={styles.text}>{item.Country}</Text></View>\r\n                    <View style={styles.abc}><Text style={styles.text}>{item.PinCode}</Text></View>\r\n                </View>\r\n            </View>\r\n            ))}\r\n            \r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}