{"ast":null,"code":"import normalizeColor from '@react-native/normalize-color';\n\nvar processColor = function processColor(color) {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  var int32Color = normalizeColor(color);\n\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n  return int32Color;\n};\n\nexport default processColor;","map":{"version":3,"names":["normalizeColor","processColor","color","undefined","int32Color"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/node_modules/react-native-web/dist/exports/processColor/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport normalizeColor from '@react-native/normalize-color';\nvar processColor = color => {\n  if (color === undefined || color === null) {\n    return color;\n  }\n\n  // convert number and hex\n  var int32Color = normalizeColor(color);\n  if (int32Color === undefined || int32Color === null) {\n    return undefined;\n  }\n  int32Color = (int32Color << 24 | int32Color >>> 8) >>> 0;\n  return int32Color;\n};\nexport default processColor;"],"mappings":"AAUA,OAAOA,cAAP,MAA2B,+BAA3B;;AACA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;EAC1B,IAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EAA2C;IACzC,OAAOA,KAAP;EACD;;EAGD,IAAIE,UAAU,GAAGJ,cAAc,CAACE,KAAD,CAA/B;;EACA,IAAIE,UAAU,KAAKD,SAAf,IAA4BC,UAAU,KAAK,IAA/C,EAAqD;IACnD,OAAOD,SAAP;EACD;;EACDC,UAAU,GAAG,CAACA,UAAU,IAAI,EAAd,GAAmBA,UAAU,KAAK,CAAnC,MAA0C,CAAvD;EACA,OAAOA,UAAP;AACD,CAZD;;AAaA,eAAeH,YAAf"},"metadata":{},"sourceType":"module"}