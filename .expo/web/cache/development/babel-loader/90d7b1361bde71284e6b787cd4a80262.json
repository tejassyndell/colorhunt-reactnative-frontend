{"ast":null,"code":"import UIManager from \"../../exports/UIManager\";\nimport useStable from \"../useStable\";\nexport default function usePlatformMethods(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n      style = _ref.style;\n  var ref = useStable(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.measure = function (callback) {\n          return UIManager.measure(hostNode, callback);\n        };\n\n        hostNode.measureLayout = function (relativeToNode, success, failure) {\n          return UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n        };\n\n        hostNode.measureInWindow = function (callback) {\n          return UIManager.measureInWindow(hostNode, callback);\n        };\n      }\n    };\n  });\n  return ref;\n}","map":{"version":3,"names":["UIManager","useStable","usePlatformMethods","_ref","pointerEvents","style","ref","hostNode","measure","callback","measureLayout","relativeToNode","success","failure","measureInWindow"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/node_modules/react-native-web/dist/modules/usePlatformMethods/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport UIManager from '../../exports/UIManager';\nimport useStable from '../useStable';\n\n/**\n * Adds non-standard methods to the hode element. This is temporarily until an\n * API like `ReactNative.measure(hostRef, callback)` is added to React Native.\n */\nexport default function usePlatformMethods(_ref) {\n  var pointerEvents = _ref.pointerEvents,\n    style = _ref.style;\n  // Avoid creating a new ref on every render.\n  var ref = useStable(() => hostNode => {\n    if (hostNode != null) {\n      hostNode.measure = callback => UIManager.measure(hostNode, callback);\n      hostNode.measureLayout = (relativeToNode, success, failure) => UIManager.measureLayout(hostNode, relativeToNode, failure, success);\n      hostNode.measureInWindow = callback => UIManager.measureInWindow(hostNode, callback);\n    }\n  });\n  return ref;\n}"],"mappings":"AASA,OAAOA,SAAP;AACA,OAAOC,SAAP;AAMA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;EAC/C,IAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;EAAA,IACEC,KAAK,GAAGF,IAAI,CAACE,KADf;EAGA,IAAIC,GAAG,GAAGL,SAAS,CAAC;IAAA,OAAM,UAAAM,QAAQ,EAAI;MACpC,IAAIA,QAAQ,IAAI,IAAhB,EAAsB;QACpBA,QAAQ,CAACC,OAAT,GAAmB,UAAAC,QAAQ;UAAA,OAAIT,SAAS,CAACQ,OAAV,CAAkBD,QAAlB,EAA4BE,QAA5B,CAAJ;QAAA,CAA3B;;QACAF,QAAQ,CAACG,aAAT,GAAyB,UAACC,cAAD,EAAiBC,OAAjB,EAA0BC,OAA1B;UAAA,OAAsCb,SAAS,CAACU,aAAV,CAAwBH,QAAxB,EAAkCI,cAAlC,EAAkDE,OAAlD,EAA2DD,OAA3D,CAAtC;QAAA,CAAzB;;QACAL,QAAQ,CAACO,eAAT,GAA2B,UAAAL,QAAQ;UAAA,OAAIT,SAAS,CAACc,eAAV,CAA0BP,QAA1B,EAAoCE,QAApC,CAAJ;QAAA,CAAnC;MACD;IACF,CANmB;EAAA,CAAD,CAAnB;EAOA,OAAOH,GAAP;AACD"},"metadata":{},"sourceType":"module"}