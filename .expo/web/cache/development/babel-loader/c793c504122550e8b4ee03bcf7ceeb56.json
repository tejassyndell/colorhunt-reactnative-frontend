{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport invariant from 'fbjs/lib/invariant';\n\nvar ChildListCollection = function () {\n  function ChildListCollection() {\n    _classCallCheck(this, ChildListCollection);\n\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n\n  _createClass(ChildListCollection, [{\n    key: \"add\",\n    value: function add(list, cellKey) {\n      var _this$_cellKeyToChild;\n\n      invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n      var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n      cellLists.add(list);\n\n      this._cellKeyToChildren.set(cellKey, cellLists);\n\n      this._childrenToCellKey.set(list, cellKey);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(list) {\n      var cellKey = this._childrenToCellKey.get(list);\n\n      invariant(cellKey != null, 'Trying to remove non-present child list');\n\n      this._childrenToCellKey.delete(list);\n\n      var cellLists = this._cellKeyToChildren.get(cellKey);\n\n      invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n      cellLists.delete(list);\n\n      if (cellLists.size === 0) {\n        this._cellKeyToChildren.delete(cellKey);\n      }\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(fn) {\n      for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n        var listSet = _step.value;\n\n        for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n          var list = _step2.value;\n          fn(list);\n        }\n      }\n    }\n  }, {\n    key: \"forEachInCell\",\n    value: function forEachInCell(cellKey, fn) {\n      var _this$_cellKeyToChild2;\n\n      var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n        var list = _step3.value;\n        fn(list);\n      }\n    }\n  }, {\n    key: \"anyInCell\",\n    value: function anyInCell(cellKey, fn) {\n      var _this$_cellKeyToChild3;\n\n      var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n        var list = _step4.value;\n\n        if (fn(list)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this._childrenToCellKey.size;\n    }\n  }]);\n\n  return ChildListCollection;\n}();\n\nexport { ChildListCollection as default };","map":{"version":3,"names":["_createForOfIteratorHelperLoose","invariant","ChildListCollection","_cellKeyToChildren","Map","_childrenToCellKey","list","cellKey","_this$_cellKeyToChild","has","cellLists","get","Set","add","set","delete","size","fn","_iterator","values","_step","done","listSet","value","_iterator2","_step2","_this$_cellKeyToChild2","_iterator3","_step3","_this$_cellKeyToChild3","_iterator4","_step4"],"sources":["E:/Hitesh/colorhunt-reactnative-frontend/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/ChildListCollection.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport default class ChildListCollection {\n  constructor() {\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  add(list, cellKey) {\n    var _this$_cellKeyToChild;\n    invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n    var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n    this._childrenToCellKey.set(list, cellKey);\n  }\n  remove(list) {\n    var cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n    var cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n  forEach(fn) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n      var listSet = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n        var list = _step2.value;\n        fn(list);\n      }\n    }\n  }\n  forEachInCell(cellKey, fn) {\n    var _this$_cellKeyToChild2;\n    var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n    for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n      var list = _step3.value;\n      fn(list);\n    }\n  }\n  anyInCell(cellKey, fn) {\n    var _this$_cellKeyToChild3;\n    var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n      var list = _step4.value;\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  size() {\n    return this._childrenToCellKey.size;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}