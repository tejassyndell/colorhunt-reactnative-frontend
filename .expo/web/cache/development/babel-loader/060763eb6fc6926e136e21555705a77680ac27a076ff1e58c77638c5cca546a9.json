{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _getNotificationCategoriesAsync;\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationCategoriesModule from \"./NotificationCategoriesModule.native\";\nexport default function getNotificationCategoriesAsync() {\n  return (_getNotificationCategoriesAsync = _getNotificationCategoriesAsync || _asyncToGenerator(function* () {\n    if (!NotificationCategoriesModule.getNotificationCategoriesAsync) {\n      throw new UnavailabilityError('Notifications', 'getNotificationCategoriesAsync');\n    }\n    return yield NotificationCategoriesModule.getNotificationCategoriesAsync();\n  })).apply(this, arguments);\n}","map":{"version":3,"names":["UnavailabilityError","NotificationCategoriesModule","getNotificationCategoriesAsync","_getNotificationCategoriesAsync","_asyncToGenerator","apply","arguments"],"sources":["/Users/syndell-068/Documents/GitHub/colorhunt-reactnative-frontend/node_modules/expo-notifications/src/getNotificationCategoriesAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule.native';\nimport { NotificationCategory } from './Notifications.types';\n\n/**\n * Fetches information about all known notification categories.\n * @return A Promise which resolves to an array of `NotificationCategory`s. On platforms that do not support notification channels,\n * it will always resolve to an empty array.\n * @platform android\n * @platform ios\n * @header categories\n */\nexport default async function getNotificationCategoriesAsync(): Promise<NotificationCategory[]> {\n  if (!NotificationCategoriesModule.getNotificationCategoriesAsync) {\n    throw new UnavailabilityError('Notifications', 'getNotificationCategoriesAsync');\n  }\n\n  return await NotificationCategoriesModule.getNotificationCategoriesAsync();\n}\n"],"mappings":";;AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAEvD,OAAOC,4BAA4B;AAWnC,wBAA8BC,8BAA8BA,CAAA;EAAA,QAAAC,+BAAA,GAAAA,+BAAA,IAAAC,iBAAA,CAA7C,aAA6C;IAC1D,IAAI,CAACH,4BAA4B,CAACC,8BAA8B,EAAE;MAChE,MAAM,IAAIF,mBAAmB,CAAC,eAAe,EAAE,gCAAgC,CAAC;;IAGlF,aAAaC,4BAA4B,CAACC,8BAA8B,EAAE;EAC5E,CAAC,GAAAG,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}